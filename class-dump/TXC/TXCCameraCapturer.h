//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TXCModule.h"

#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "TXCCapturer-Protocol.h"

@class AVCaptureConnection, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureSession, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, NSNumber, NSObject, NSString;
@protocol OS_dispatch_queue, TXICameraCapturerDelegate, TXINotifyDelegate;

@interface TXCCameraCapturer : TXCModule <AVCaptureVideoDataOutputSampleBufferDelegate, TXCCapturer>
{
    unsigned long long _lastCalculateTS;
    unsigned long long _lastCaptureFrameCount;
    unsigned long long _captureFrameCount;
    BOOL _front;
    double _presetWidth;
    double _presetHeight;
    long long _resolution;
    unsigned long long _lastDetectedTimeStame;
    BOOL _supportsFaceDetection;
    long long _angelAdjustion;
    BOOL _faceDetect;
    BOOL _mirror;
    BOOL _enableGSensor;
    int _frameRate;
    int _outputRotation;
    int _streamType;
    id <TXICameraCapturerDelegate> _delegate;
    id <TXINotifyDelegate> _notifyDelegate;
    NSObject<OS_dispatch_queue> *_cameraProcessingQueue;
    double _zoomScale;
    NSNumber *_cameraPreviewOrientation;
    long long _homeOrientation;
    long long _rotation;
    long long _renderMirrorMode;
    AVCaptureDevice *_inputCamera;
    AVCaptureSession *_captureSession;
    AVCaptureDeviceInput *_videoInput;
    AVCaptureVideoDataOutput *_videoOutput;
    AVCaptureConnection *_videoConnection;
    NSObject<OS_dispatch_queue> *_cameraDelegateQueue;
    NSObject<OS_dispatch_queue> *_faceDetectQueue;
    long long _position;
    AVCaptureVideoPreviewLayer *_prevLayer;
    CDUnknownBlockType _captureLogger;
    struct CGSize _videoSize;
}

+ (BOOL)isFrontFacingCameraPresent;
+ (BOOL)isBackFacingCameraPresent;
+ (void)requestAccessForMediaType:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType captureLogger; // @synthesize captureLogger=_captureLogger;
@property(retain) AVCaptureVideoPreviewLayer *prevLayer; // @synthesize prevLayer=_prevLayer;
@property(nonatomic) long long position; // @synthesize position=_position;
@property(retain) NSObject<OS_dispatch_queue> *faceDetectQueue; // @synthesize faceDetectQueue=_faceDetectQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cameraDelegateQueue; // @synthesize cameraDelegateQueue=_cameraDelegateQueue;
@property(retain) AVCaptureConnection *videoConnection; // @synthesize videoConnection=_videoConnection;
@property(retain) AVCaptureVideoDataOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain) AVCaptureDeviceInput *videoInput; // @synthesize videoInput=_videoInput;
@property(retain) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(retain) AVCaptureDevice *inputCamera; // @synthesize inputCamera=_inputCamera;
@property(nonatomic) BOOL enableGSensor; // @synthesize enableGSensor=_enableGSensor;
@property(nonatomic) long long renderMirrorMode; // @synthesize renderMirrorMode=_renderMirrorMode;
@property(nonatomic) int streamType; // @synthesize streamType=_streamType;
@property(nonatomic) BOOL mirror; // @synthesize mirror=_mirror;
@property(nonatomic) long long rotation; // @synthesize rotation=_rotation;
@property(nonatomic) long long homeOrientation; // @synthesize homeOrientation=_homeOrientation;
@property(retain, nonatomic) NSNumber *cameraPreviewOrientation; // @synthesize cameraPreviewOrientation=_cameraPreviewOrientation;
@property(nonatomic) int outputRotation; // @synthesize outputRotation=_outputRotation;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) double zoomScale; // @synthesize zoomScale=_zoomScale;
@property(nonatomic) BOOL faceDetect; // @synthesize faceDetect=_faceDetect;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cameraProcessingQueue; // @synthesize cameraProcessingQueue=_cameraProcessingQueue;
@property(nonatomic) __weak id <TXINotifyDelegate> notifyDelegate; // @synthesize notifyDelegate=_notifyDelegate;
@property(nonatomic) __weak id <TXICameraCapturerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (BOOL)isCameraAutoFocusFaceModeSupported;
- (BOOL)isCameraTorchSupported;
- (BOOL)isCameraFocusPositionInPreviewSupported;
- (BOOL)isCameraZoomSupported;
@property(readonly, getter=isFrontFacingCameraPresent) BOOL frontFacingCameraPresent;
@property(readonly, getter=isBackFacingCameraPresent) BOOL backFacingCameraPresent;
- (id)genVFrame:(struct opaqueCMSampleBuffer *)arg1;
- (void)processSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
@property(readonly, nonatomic, getter=isRunning) BOOL running;
- (BOOL)setSessionPreset:(id)arg1;
- (void)adjustPresetForDeviceIfNeeded:(id)arg1;
- (BOOL)setResolution:(long long)arg1;
- (void)handleDeviceWasDisconnected:(id)arg1;
- (void)resetInterestPoint:(struct CGPoint)arg1 monitorSubjectAreaChange:(BOOL)arg2;
- (void)setFocusPosition:(struct CGPoint)arg1;
- (void)stop;
- (void)startRunningCapture;
- (void)start;
- (BOOL)setFlashEnable:(BOOL)arg1;
@property int frameRate; // @synthesize frameRate=_frameRate;
- (BOOL)supportsVideoFrameRate:(long long)arg1;
- (id)cameraWithPosition:(long long)arg1;
- (BOOL)rotateCamera;
@property(nonatomic) BOOL front;
- (void)setSelectedCamera:(id)arg1;
- (void)initCameraCapture;
- (id)init;
- (void)runTXCAsynchronouslyOnCameraProcessingQueue:(CDUnknownBlockType)arg1;
- (void)runTXCSynchronouslyOnCameraProcessingQueue:(CDUnknownBlockType)arg1;
- (void)sendNotifyEvent:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

