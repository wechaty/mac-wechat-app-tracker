//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "PBGeneratedMessage.h"

@class BaseResponse, CDNDnsInfo, SKBuiltinBuffer_t, WxUserIdcInfo;

@interface GetCDNDnsResponse : PBGeneratedMessage
{
    unsigned int hasBaseResponse:1;
    unsigned int hasDnsInfo:1;
    unsigned int hasSnsDnsInfo:1;
    unsigned int hasAppDnsInfo:1;
    unsigned int hasCdndnsRuleBuf:1;
    unsigned int hasFakeCdndnsRuleBuf:1;
    unsigned int hasFakeDnsInfo:1;
    unsigned int hasNextIpv6:1;
    unsigned int hasC2CRoamDnsInfo:1;
    unsigned int hasCdnUserIdcInfo:1;
    unsigned int hasVcodec1Limit:1;
    int nextIpv6;
    int vcodec1Limit;
    BaseResponse *baseResponse;
    CDNDnsInfo *dnsInfo;
    CDNDnsInfo *snsDnsInfo;
    CDNDnsInfo *appDnsInfo;
    SKBuiltinBuffer_t *cdndnsRuleBuf;
    SKBuiltinBuffer_t *fakeCdndnsRuleBuf;
    CDNDnsInfo *fakeDnsInfo;
    CDNDnsInfo *c2CRoamDnsInfo;
    WxUserIdcInfo *cdnUserIdcInfo;
}

+ (id)parseFromData:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic, setter=SetVcodec1Limit:) int vcodec1Limit; // @synthesize vcodec1Limit;
@property(readonly, nonatomic) BOOL hasVcodec1Limit; // @synthesize hasVcodec1Limit;
@property(retain, nonatomic, setter=SetCdnUserIdcInfo:) WxUserIdcInfo *cdnUserIdcInfo; // @synthesize cdnUserIdcInfo;
@property(readonly, nonatomic) BOOL hasCdnUserIdcInfo; // @synthesize hasCdnUserIdcInfo;
@property(retain, nonatomic, setter=SetC2CRoamDnsInfo:) CDNDnsInfo *c2CRoamDnsInfo; // @synthesize c2CRoamDnsInfo;
@property(readonly, nonatomic) BOOL hasC2CRoamDnsInfo; // @synthesize hasC2CRoamDnsInfo;
@property(nonatomic, setter=SetNextIpv6:) int nextIpv6; // @synthesize nextIpv6;
@property(readonly, nonatomic) BOOL hasNextIpv6; // @synthesize hasNextIpv6;
@property(retain, nonatomic, setter=SetFakeDnsInfo:) CDNDnsInfo *fakeDnsInfo; // @synthesize fakeDnsInfo;
@property(readonly, nonatomic) BOOL hasFakeDnsInfo; // @synthesize hasFakeDnsInfo;
@property(retain, nonatomic, setter=SetFakeCdndnsRuleBuf:) SKBuiltinBuffer_t *fakeCdndnsRuleBuf; // @synthesize fakeCdndnsRuleBuf;
@property(readonly, nonatomic) BOOL hasFakeCdndnsRuleBuf; // @synthesize hasFakeCdndnsRuleBuf;
@property(retain, nonatomic, setter=SetCdndnsRuleBuf:) SKBuiltinBuffer_t *cdndnsRuleBuf; // @synthesize cdndnsRuleBuf;
@property(readonly, nonatomic) BOOL hasCdndnsRuleBuf; // @synthesize hasCdndnsRuleBuf;
@property(retain, nonatomic, setter=SetAppDnsInfo:) CDNDnsInfo *appDnsInfo; // @synthesize appDnsInfo;
@property(readonly, nonatomic) BOOL hasAppDnsInfo; // @synthesize hasAppDnsInfo;
@property(retain, nonatomic, setter=SetSnsDnsInfo:) CDNDnsInfo *snsDnsInfo; // @synthesize snsDnsInfo;
@property(readonly, nonatomic) BOOL hasSnsDnsInfo; // @synthesize hasSnsDnsInfo;
@property(retain, nonatomic, setter=SetDnsInfo:) CDNDnsInfo *dnsInfo; // @synthesize dnsInfo;
@property(readonly, nonatomic) BOOL hasDnsInfo; // @synthesize hasDnsInfo;
@property(retain, nonatomic, setter=SetBaseResponse:) BaseResponse *baseResponse; // @synthesize baseResponse;
@property(readonly, nonatomic) BOOL hasBaseResponse; // @synthesize hasBaseResponse;
- (id)mergeFromCodedInputStream:(id)arg1;
- (int)serializedSize;
- (void)writeToCodedOutputStream:(id)arg1;
- (BOOL)isInitialized;
- (id)init;

@end

