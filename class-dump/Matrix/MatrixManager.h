//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MatrixPluginListenerDelegate-Protocol.h"
#import "WCReportStrategyDelegate-Protocol.h"

@class Matrix, MatrixStrategyIDCache, NSMutableDictionary, NSString;
@protocol MatrixManagerDelegate, MatrixManagerReportDelegate, OS_dispatch_queue;

@interface MatrixManager : NSObject <MatrixPluginListenerDelegate, WCReportStrategyDelegate>
{
    id <MatrixManagerDelegate> _delegate;
    id <MatrixManagerReportDelegate> _matrixReportDelegate;
    unsigned long long _strategyUin;
    NSObject<OS_dispatch_queue> *_reporterQueue;
    NSMutableDictionary *_reportIssueDict;
    Matrix *_matrix;
    MatrixStrategyIDCache *_strategyIDCache;
}

+ (id)formatReportIDFromDumpFilePath:(id)arg1;
+ (void)enableLocalSymbolicate;
+ (void)setMatrixCacheRootPath:(id)arg1;
+ (id)sharedInstance;
+ (id)getCrashReportStrategyTag;
+ (unsigned long long)strategyReportEnvForTag:(id)arg1;
+ (void)strategyUpdateUploadCnt:(int)arg1 forTag:(id)arg2;
+ (BOOL)startegyIsMaxUploadCntForTag:(id)arg1;
+ (BOOL)strategyIsAutoReportForTag:(id)arg1;
+ (void)updateStrategy:(id)arg1 forTag:(id)arg2;
+ (void)setUinForStrategy:(unsigned long long)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) MatrixStrategyIDCache *strategyIDCache; // @synthesize strategyIDCache=_strategyIDCache;
@property(retain, nonatomic) Matrix *matrix; // @synthesize matrix=_matrix;
@property(retain, nonatomic) NSMutableDictionary *reportIssueDict; // @synthesize reportIssueDict=_reportIssueDict;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reporterQueue; // @synthesize reporterQueue=_reporterQueue;
@property(nonatomic) unsigned long long strategyUin; // @synthesize strategyUin=_strategyUin;
@property(nonatomic) __weak id <MatrixManagerReportDelegate> matrixReportDelegate; // @synthesize matrixReportDelegate=_matrixReportDelegate;
@property(nonatomic) __weak id <MatrixManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)getReportIDForStrategy:(id)arg1;
- (void)addReportID:(id)arg1 forStrategy:(id)arg2;
- (BOOL)p_isReportSupportCustomLagStrategy;
- (void)p_callCustomIssueDelegate:(id)arg1 success:(BOOL)arg2;
- (void)p_callUploadCustomIssueDelegate:(id)arg1;
- (void)p_callSqliteLintDelegate:(id)arg1 success:(BOOL)arg2;
- (void)p_callUploadSqliteLintIssueDelegate:(id)arg1;
- (void)p_callMemoryStatIssueDelegate:(id)arg1 success:(BOOL)arg2;
- (void)p_callUploadMemStatIssueDelegate:(id)arg1;
- (void)p_callLagIssueDelegate:(id)arg1 success:(BOOL)arg2;
- (void)p_callUploadLagIssueDelegate:(id)arg1;
- (void)p_callCrashIssueDelegate:(id)arg1 success:(BOOL)arg2;
- (void)p_callUploadCrashIssueDelegate:(id)arg1;
- (id)tryGetMatrixReportCustomLagLimitReportIDs:(id)arg1;
- (BOOL)isCanCustomAutoReportLag:(id)arg1 customStrategy:(id)arg2;
- (BOOL)isReportCustomLagLimit:(id)arg1 customStrategy:(id)arg2;
- (BOOL)isReportSupportCustomLagStrategy;
- (BOOL)isNetworkAllowAutoReportLag:(id)arg1;
- (BOOL)isCanAutoReportLag:(id)arg1;
- (BOOL)isReportLagLimit:(id)arg1;
- (BOOL)isReportCrashLimit:(id)arg1;
- (void)uploadCustomIssue:(id)arg1;
- (int)getIssueTypeOfMatrixIssue:(id)arg1;
- (BOOL)uploadMatrixIssue:(id)arg1;
- (void)uploadMatrixIssueCompleted:(BOOL)arg1 withIssueID:(id)arg2;
- (void)onReportIssue:(id)arg1;
- (void)onDestroy:(id)arg1;
- (void)onStop:(id)arg1;
- (void)onStart:(id)arg1;
- (void)onInit:(id)arg1;
- (BOOL)checkXPCReboot;
- (BOOL)isAfterLastLaunchUserRebootDevice;
- (unsigned long long)lastRebootType;
- (id)getFPSMonitorPlugin;
- (id)getCrashBlockPlugin;
- (void)installWithBuilder:(id)arg1;
- (id)init;
- (BOOL)isLagReportUploadCountLimit:(id)arg1;
- (void)incrementLagReportUploadCount:(int)arg1 pluginTag:(id)arg2;
- (BOOL)isCurrentNetworkAllowLagReport:(id)arg1;
- (BOOL)canAutoLagReport:(id)arg1;
- (void)updateVipLagReportStartegyWithPluginTag:(id)arg1 withSampleRatio:(float)arg2 withReportLimitCount:(unsigned long long)arg3 withNetworkEnv:(unsigned long long)arg4 withTimeout:(unsigned long long)arg5;
- (void)updateLagReportStartegyWithPluginTag:(id)arg1 withSampleRatio:(float)arg2 withReportLimitCount:(unsigned long long)arg3 withNetworkEnv:(unsigned long long)arg4;
- (BOOL)isCrashReportUploadCountLimit;
- (void)incrementCrashReportUploadCount:(int)arg1;
- (void)updateCrashReportStrategyWithReportLimitCount:(unsigned long long)arg1;
- (id)getReportCachePath;
- (id)getReportURL;
- (id)getReportHost;
- (id)getReportUserName;
- (unsigned int)getReportAppVersion;
- (unsigned int)getReportUin;
- (id)getReportCryptKeyWithVersion:(unsigned int)arg1 withDataSize:(unsigned int)arg2;
- (unsigned int)getReportProductID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

