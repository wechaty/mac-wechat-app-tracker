//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMSimpleWebViewController.h"

#import "BaseWebViewFontAdjustDelegate-Protocol.h"
#import "MMQRCodeScannerExt-Protocol.h"
#import "MMWKWebViewMenuDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKScriptMessageHandler-Protocol.h"
#import "WKUIDelegate-Protocol.h"
#import "WebViewGetA8KeyLogicDelegate-Protocol.h"
#import "WebViewJSApiVerifyMgrDelegate-Protocol.h"
#import "WebViewJSLogicDelegate-Protocol.h"

@class MMProgressView, MMTimer, MMToastView, MMWebViewErrorView, MMWebViewPluginScheduler, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSTextField, NSView, WKWebViewConfiguration, WebViewDataItem, WebViewDataLogic, WebViewGetA8KeyLogic, WebViewJSApiVerifyMgr, WebViewJSLogic, WebViewOAuthLogic;
@protocol BaseWebViewControllerDelegate;

@interface BaseWebViewController : MMSimpleWebViewController <WKNavigationDelegate, WKUIDelegate, WKScriptMessageHandler, WebViewGetA8KeyLogicDelegate, WebViewJSLogicDelegate, WebViewJSApiVerifyMgrDelegate, MMWKWebViewMenuDelegate, MMQRCodeScannerExt, BaseWebViewFontAdjustDelegate>
{
    BOOL m_openAllPermission;
    BOOL _isMiniWindowMode;
    BOOL _isInitial;
    int _fontSize;
    MMWebViewPluginScheduler *_pluginScheduler;
    unsigned long long _type;
    WebViewJSLogic *_webViewJSLogic;
    WebViewJSApiVerifyMgr *_jsapiVerifyMgr;
    WebViewDataItem *_dataItem;
    NSMutableDictionary *_extraInfo;
    id <BaseWebViewControllerDelegate> _delegate;
    NSView *_toolbarContanier;
    MMProgressView *_progressView;
    NSTextField *_hostLabel;
    NSView *_contentContainer;
    MMWebViewErrorView *_errorView;
    NSString *_loadingUrl;
    double _pageZoom;
    NSMutableDictionary *_dictBrandInfo;
    WebViewGetA8KeyLogic *_getA8KeyLogic;
    WKWebViewConfiguration *_configuration;
    NSMutableDictionary *_jsInitInfo;
    WebViewDataLogic *_dataLogic;
    MMToastView *_toastView;
    MMTimer *_toastTimer;
    NSMutableArray *_arrRouteUrl;
    WebViewOAuthLogic *_oauthLogic;
    NSMutableSet *_jsTempAllowApiCalls;
}

+ (BOOL)authorizationStatusForMediaTypeForWebView:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableSet *jsTempAllowApiCalls; // @synthesize jsTempAllowApiCalls=_jsTempAllowApiCalls;
@property(retain, nonatomic) WebViewOAuthLogic *oauthLogic; // @synthesize oauthLogic=_oauthLogic;
@property(nonatomic) BOOL isInitial; // @synthesize isInitial=_isInitial;
@property(retain, nonatomic) NSMutableArray *arrRouteUrl; // @synthesize arrRouteUrl=_arrRouteUrl;
@property(retain, nonatomic) MMTimer *toastTimer; // @synthesize toastTimer=_toastTimer;
@property(retain, nonatomic) MMToastView *toastView; // @synthesize toastView=_toastView;
@property(retain, nonatomic) WebViewDataLogic *dataLogic; // @synthesize dataLogic=_dataLogic;
@property(retain, nonatomic) NSMutableDictionary *jsInitInfo; // @synthesize jsInitInfo=_jsInitInfo;
@property(retain, nonatomic) WKWebViewConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) WebViewGetA8KeyLogic *getA8KeyLogic; // @synthesize getA8KeyLogic=_getA8KeyLogic;
@property(retain, nonatomic) NSMutableDictionary *dictBrandInfo; // @synthesize dictBrandInfo=_dictBrandInfo;
@property(nonatomic) double pageZoom; // @synthesize pageZoom=_pageZoom;
@property(nonatomic) int fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic) NSString *loadingUrl; // @synthesize loadingUrl=_loadingUrl;
@property(retain, nonatomic) MMWebViewErrorView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) NSView *contentContainer; // @synthesize contentContainer=_contentContainer;
@property(retain, nonatomic) NSTextField *hostLabel; // @synthesize hostLabel=_hostLabel;
@property(retain, nonatomic) MMProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) NSView *toolbarContanier; // @synthesize toolbarContanier=_toolbarContanier;
@property(nonatomic) __weak id <BaseWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableDictionary *extraInfo; // @synthesize extraInfo=_extraInfo;
@property(retain, nonatomic) WebViewDataItem *dataItem; // @synthesize dataItem=_dataItem;
@property(retain, nonatomic) WebViewJSApiVerifyMgr *jsapiVerifyMgr; // @synthesize jsapiVerifyMgr=_jsapiVerifyMgr;
@property(retain, nonatomic) WebViewJSLogic *webViewJSLogic; // @synthesize webViewJSLogic=_webViewJSLogic;
@property(nonatomic) BOOL isMiniWindowMode; // @synthesize isMiniWindowMode=_isMiniWindowMode;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(retain, nonatomic) MMWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
- (BOOL)isAuthMonitor:(id)arg1 event:(id)arg2;
- (void)handleH5ExtTransfer:(id)arg1;
- (void)handleH5Auth:(id)arg1;
- (id)mpBizUrl:(id)arg1 inUrlList:(id)arg2;
- (unsigned int)GetGeneralBitSetForUrl:(id)arg1;
- (BOOL)IsBitsetSet:(unsigned int)arg1 forUrl:(id)arg2;
- (BOOL)allowShowAppMsgTailName;
- (void)handleOpenWeAppEvent;
- (id)handleGetRouteUrls;
- (void)handleHideMenuItems:(id)arg1;
- (void)handleShowMenuItems:(id)arg1;
- (void)handleHideOptionMenuEvent;
- (void)handleShowOptionMenuEvent;
- (void)handlePreVerifyJSAPI:(id)arg1 failHandleBlock:(CDUnknownBlockType)arg2;
- (void)handleCurrentMpInfo:(id)arg1;
- (void)handleCloseWindowJSEvent;
- (void)handleOpenExtraWebviewJSEventWithUrl:(id)arg1;
- (void)handleJumpToBizProfileJSEventWithContact:(id)arg1;
- (void)handleBizChatJSEventWithContact:(id)arg1;
- (void)handleProfileJSEventWithUserName:(id)arg1;
- (void)handleAddContactJSEventWithContact:(id)arg1;
- (void)shareWithAppScene:(id)arg1;
- (void)shareAppMessageFromWxUpdateApiData:(id)arg1;
- (id)shareParamFormScene:(id)arg1;
- (void)setupExtraDataForShareToTimeLine;
- (id)createA8keyConfig;
- (void)forwardToTimeline;
- (void)forwardContentToWeWork;
- (void)forwardContent;
- (void)handleOAuth:(id)arg1;
- (BOOL)needHandleNativeOAuth:(id)arg1;
- (BOOL)shouldShowMenuItem:(id)arg1;
- (BOOL)shouldDisableMenuItem:(id)arg1;
- (void)disableMenuItemAction;
- (id)logicBaseWebViewController;
- (void)onCopy:(id)arg1;
- (void)onDomReady;
- (void)onPageStateChange:(id)arg1;
- (id)getAuthorizedMonitorEvents:(id)arg1;
- (BOOL)isTempAccessOfJSApiPermitted:(id)arg1;
- (unsigned char)getJSApiPermission:(id)arg1;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 requestMediaCapturePermissionForOrigin:(id)arg2 initiatedByFrame:(id)arg3 type:(long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runOpenPanelWithParameters:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)onJSApiPermissionsUpdate:(id)arg1;
- (id)getJSFunctionDef:(id)arg1;
- (unsigned int)currentGetA8KeyScene;
- (void)removeUrlPermissionForUrl:(id)arg1;
- (void)saveUrlPermission:(id)arg1 url:(id)arg2;
- (void)saveJSAPIPermissions:(id)arg1 url:(id)arg2;
- (void)onJsapiGetA8key:(BOOL)arg1 requestUrl:(id)arg2 requestHeaders:(id)arg3;
- (void)onJumpToURL:(id)arg1 withCustomerCookies:(id)arg2;
- (void)onJumpToBack;
- (void)onJumpToSafariWithUrl:(id)arg1;
- (void)getA8KeyDidFaildWithReason:(int)arg1;
- (void)getA8keyDidFinishedWithReason:(int)arg1 req:(id)arg2 resp:(id)arg3;
- (id)getCurrentUrl;
- (int)fontSizeDidReset;
- (void)fontSizeDidChanged:(int)arg1;
- (void)handleAppFontSize;
- (void)sendFeedH5EventAuthEvent:(id)arg1 withParams:(id)arg2;
- (void)onWebviewReady;
- (void)exitMiniMode;
- (void)enterMiniModeWithWidth:(int)arg1 andHeight:(int)arg2;
- (void)hideMiniButton;
- (void)showMiniButton;
- (void)onCopyAction:(id)arg1;
- (void)onDomReadyAction;
- (void)onPageStateChangeAction:(id)arg1;
- (void)openBlankInWebView;
- (void)openInExternalBrowser:(id)arg1;
- (void)openInExternalBrowser;
- (void)copyUrl;
- (void)addToFavorites;
- (void)refreshContent;
- (void)nextItem;
- (void)previousItem;
- (id)currentSourceIdWithUrl:(id)arg1;
- (void)onLoadError:(id)arg1;
- (void)onLoadFinish:(id)arg1;
- (id)currentMainDocumentURL;
- (void)updateFloatWindowStatus;
- (void)updateCurrentA8KeyUrl:(id)arg1;
- (id)currentShareUrl;
- (id)currentWebViewWindow;
- (BOOL)shouldUpdateWebViewWindowTitle;
- (BOOL)shouldUpdateWebViewTitle;
- (void)saveMpTitle:(id)arg1 withUrl:(id)arg2;
- (void)updateWebViewTitle;
- (void)updateWebViewTitleWithStr:(id)arg1;
- (void)showWebViewTitleWithValue:(double)arg1;
- (void)showWebViewTitle:(BOOL)arg1;
- (id)currentAppName;
- (id)currentWebViewDesc;
- (id)currentWebViewWindowTitle;
- (id)currentWebViewTitle;
- (void)showHostLabelWithValue:(double)arg1;
- (id)currentHostText;
- (void)hideToastAnimation;
- (void)stopToastTimer;
- (void)showWebViewToastWithText:(id)arg1;
- (void)stopLoadingWebViewToast;
- (void)showLoadingWebViewToastWithText:(id)arg1;
- (void)showWebViewToastWithText:(id)arg1 isSuccess:(BOOL)arg2 duration:(double)arg3;
- (BOOL)isErrorViewShown;
- (void)commonConfigDefaultErrorView:(id)arg1;
- (void)openUnsafeLinkInExternal:(id)arg1;
- (void)showErrorByCode:(long long)arg1;
- (void)showErrorViewWithTitle:(id)arg1;
- (void)showNetworkErrorHint;
- (void)showNonNetworkErrorHint;
- (void)hideErrorHint;
- (void)informWebviewReddotInfoIfNeed:(id)arg1;
- (BOOL)shouldUseGetA8Key;
- (void)loadRequestWithUrl:(id)arg1 shareUrl:(id)arg2;
- (void)recordArrRouteUrl:(id)arg1;
- (void)openInWebView:(id)arg1;
- (void)initJsInitInfo:(id)arg1;
- (id)getExtraInfoKeyByUrlString:(id)arg1;
- (void)updateExtraInfo;
- (void)enableHandoffItem;
- (void)permitTempAccessOfJSApi:(id)arg1;
- (void)removePermitTempAccessOfJSApi:(id)arg1;
- (BOOL)sholudAddFinderSuffix;
- (void)tryReloadUrl:(id)arg1;
- (void)noticeToPreload:(id)arg1;
- (void)showWebViewWithDataItem:(id)arg1 initialShowing:(BOOL)arg2;
- (void)showAlertSheetWithMessage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resetViewInfo;
- (void)resetWebView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)webViewUserScript;
- (void)viewChangedEffectiveAppearance;
- (void)setupFontSize;
- (void)setupWebView;
- (void)updatePageZoom:(double)arg1;
- (void)updateZoomStatus;
- (void)handleWxWorkJumpScheme:(id)arg1;
- (void)handleWeixinJumpScheme:(id)arg1;
- (void)updateMenuItems;
- (void)updateNavigation;
- (void)setupUIControls;
- (void)dealloc;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (BOOL)isEnableCustom:(id)arg1 domainPathList:(id)arg2;
- (void)successToParseQRCodeResult:(id)arg1;
- (void)unknownForParseQRCodeResult:(id)arg1;
- (void)failToParseQRCodeResult:(id)arg1 errorInfo:(id)arg2;
- (void)startParseQRCodeResult:(id)arg1;
- (void)onContextMenuQRCodeAction;
- (void)detectWKWebViewImage:(CDUnknownBlockType)arg1;
- (void)hiddenQRCodeResult;
- (void)onQRCodeButtonClick:(id)arg1;
- (void)showQRCodeResults;
- (void)cancelQRCodeStatusIfNeeded;
- (id)QRCodeMaskView;
- (void)setQRCodeMaskView:(id)arg1;
- (id)QRCodeResultsButtons;
- (void)setQRCodeResultsButtons:(id)arg1;
- (id)QRCodeResults;
- (void)setQRCodeResults:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

