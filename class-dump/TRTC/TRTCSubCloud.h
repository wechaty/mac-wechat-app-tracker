//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TRTCCloud.h"

@interface TRTCSubCloud : TRTCCloud
{
    TRTCCloud *_mainCloud;
}

+ (void)setFrameworkType:(int)arg1 appScene:(int)arg2 sdkAppId:(int)arg3;
+ (void)setLogDelegate:(id)arg1;
+ (void)setLogDirPath:(id)arg1;
+ (void)setLogCompressEnabled:(BOOL)arg1;
+ (void)setConsoleEnabled:(BOOL)arg1;
+ (void)setLogLevel:(long long)arg1;
+ (id)getSDKVersion;
- (void).cxx_destruct;
@property __weak TRTCCloud *mainCloud; // @synthesize mainCloud=_mainCloud;
- (void)destroyClean;
- (void)applyAudioCaptureServerConfig:(const struct TRTCAudioServerConfig *)arg1;
- (void)applyVideoCaptureServerConfig:(const struct TRTCVideoServerConfig *)arg1;
- (void)onVideoConfigChanged:(const struct TXVideoConfig *)arg1;
- (void)onIdrFpsChanged:(int)arg1;
- (void)onVideoQosChange:(const struct VideoQosPara *)arg1;
- (void)onAudioQosChange:(const struct AudioQosPara *)arg1;
- (void)releaseAudioCapture;
- (id)createSubCloud;
- (void)setMixTranscodingConfig:(id)arg1;
- (void)stopPublishCDNStream;
- (void)startPublishCDNStream:(id)arg1;
- (void)stopPublishing;
- (void)startPublishing:(id)arg1 type:(long long)arg2;
- (void)disconnectOtherRoom;
- (void)connectOtherRoom:(id)arg1;
- (void)setGreenScreenFile:(id)arg1;
- (void)setFilterConcentration:(float)arg1;
- (void)setFilter:(id)arg1;
- (void)startScreenCapture:(id)arg1;
- (void)setBeautyStyle:(long long)arg1 beautyLevel:(long long)arg2 whitenessLevel:(long long)arg3 ruddinessLevel:(long long)arg4;
- (void)setMicVolumeOnMixing:(long long)arg1;
- (void)callExperimentalAPI:(id)arg1;
- (void)setDebugViewMargin:(id)arg1 margin:(struct NSEdgeInsets)arg2;
- (void)showDebugView:(long long)arg1;
- (void)stopSpeakerDeviceTest;
- (void)startSpeakerDeviceTest:(id)arg1 onVolumeChanged:(CDUnknownBlockType)arg2;
- (void)stopMicDeviceTest;
- (void)startMicDeviceTest:(long long)arg1 testEcho:(CDUnknownBlockType)arg2;
- (void)stopCameraDeviceTest;
- (void)startCameraDeviceTestInView:(id)arg1;
- (void)stopSpeedTest;
- (void)startSpeedTest:(unsigned int)arg1 userId:(id)arg2 userSig:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)resumeAudioEffect:(int)arg1;
- (void)pauseAudioEffect:(int)arg1;
- (void)setAllAudioEffectsVolume:(int)arg1;
- (void)stopAllAudioEffects;
- (void)stopAudioEffect:(int)arg1;
- (void)setAudioEffectVolume:(int)arg1 volume:(int)arg2;
- (void)playAudioEffect:(id)arg1;
- (void)setVoiceChangerType:(long long)arg1;
- (void)setReverbType:(long long)arg1;
- (void)setBGMPublishVolume:(long long)arg1;
- (void)setBGMPlayoutVolume:(long long)arg1;
- (void)setBGMVolume:(long long)arg1;
- (int)setBGMPosition:(long long)arg1;
- (long long)getBGMDuration:(id)arg1;
- (void)resumeBGM;
- (void)pauseBGM;
- (void)stopBGM;
- (void)playBGM:(id)arg1 withBeginNotify:(CDUnknownBlockType)arg2 withProgressNotify:(CDUnknownBlockType)arg3 andCompleteNotify:(CDUnknownBlockType)arg4;
- (BOOL)sendSEIMsg:(id)arg1 repeatCount:(int)arg2;
- (BOOL)sendCustomCmdMsg:(long long)arg1 data:(id)arg2 reliable:(BOOL)arg3 ordered:(BOOL)arg4;
- (void)setAudioFrameDelegate:(id)arg1;
- (void)sendCustomAudioData:(id)arg1;
- (void)enableCustomAudioCapture:(BOOL)arg1;
- (int)setRemoteVideoRenderDelegate:(id)arg1 delegate:(id)arg2 pixelFormat:(long long)arg3 bufferType:(long long)arg4;
- (int)setLocalVideoRenderDelegate:(id)arg1 pixelFormat:(long long)arg2 bufferType:(long long)arg3;
- (void)sendCustomVideoData:(id)arg1;
- (void)enableCustomVideoCapture:(BOOL)arg1;
- (void)setSubStreamMixVolume:(long long)arg1;
- (void)setSubStreamEncoderParam:(id)arg1;
- (void)setRemoteSubStreamViewRotation:(id)arg1 rotation:(long long)arg2;
- (void)setRemoteSubStreamViewFillMode:(id)arg1 mode:(long long)arg2;
- (void)stopRemoteSubStreamView:(id)arg1;
- (void)startRemoteSubStreamView:(id)arg1 view:(id)arg2;
- (void)setSystemAudioLoopbackVolume:(unsigned int)arg1;
- (void)stopSystemAudioLoopback;
- (void)startSystemAudioLoopback;
- (void)selectScreenCaptureTarget:(id)arg1 rect:(struct CGRect)arg2 capturesCursor:(BOOL)arg3 highlight:(BOOL)arg4;
- (id)getScreenCaptureSourcesWithThumbnailSize:(struct CGSize)arg1 iconSize:(struct CGSize)arg2;
- (int)resumeScreenCapture;
- (int)pauseScreenCapture;
- (int)stopScreenCapture;
- (void)startScreenCapture:(id)arg1 streamType:(long long)arg2 encParam:(id)arg3;
- (void)setWatermark:(id)arg1 streamType:(long long)arg2 rect:(struct CGRect)arg3;
- (id)getBeautyManager;
- (int)setCurrentSpeakerDeviceVolume:(long long)arg1;
- (float)getCurrentSpeakerDeviceVolume;
- (int)setCurrentSpeakerDevice:(id)arg1;
- (id)getCurrentSpeakerDevice;
- (id)getSpeakerDevicesList;
- (void)setCurrentMicDeviceVolume:(long long)arg1;
- (float)getCurrentMicDeviceVolume;
- (int)setCurrentMicDevice:(id)arg1;
- (id)getCurrentMicDevice;
- (id)getMicDevicesList;
- (int)setCurrentCameraDevice:(id)arg1;
- (id)getCurrentCameraDevice;
- (id)getCameraDevicesList;
- (void)setSystemVolumeType:(long long)arg1;
- (void)stopAudioRecording;
- (int)startAudioRecording:(id)arg1;
- (void)volumeCallbackWithMicVolume:(long long)arg1 totalVolume:(long long)arg2;
- (void)enableAudioVolumeEvaluation:(unsigned long long)arg1;
- (long long)getAudioPlayoutVolume;
- (void)setAudioPlayoutVolume:(long long)arg1;
- (long long)getAudioCaptureVolume;
- (void)setAudioCaptureVolume:(long long)arg1;
- (void)setRemoteAudioVolume:(id)arg1 volume:(int)arg2;
- (void)muteAllRemoteAudio:(BOOL)arg1;
- (void)muteRemoteAudio:(id)arg1 mute:(BOOL)arg2;
- (void)setAudioRoute:(long long)arg1;
- (void)muteLocalAudio:(BOOL)arg1;
- (void)stopLocalAudio;
- (void)startLocalAudio;
- (void)setPriorRemoteVideoStreamType:(long long)arg1;
- (void)setRemoteVideoStreamType:(id)arg1 type:(long long)arg2;
- (int)enableEncSmallVideoStream:(BOOL)arg1 withQuality:(id)arg2;
- (void)setGSensorMode:(long long)arg1;
- (void)setVideoEncoderMirror:(BOOL)arg1;
- (void)setLocalViewMirror:(BOOL)arg1;
- (void)setVideoEncoderRotation:(long long)arg1;
- (void)setRemoteViewRotation:(id)arg1 rotation:(long long)arg2;
- (void)setLocalViewRotation:(long long)arg1;
- (void)setRemoteViewFillMode:(id)arg1 mode:(long long)arg2;
- (void)setLocalViewFillMode:(long long)arg1;
- (void)setNetworkQosParam:(id)arg1;
- (void)setVideoEncoderParam:(id)arg1;
- (void)muteAllRemoteVideoStreams:(BOOL)arg1;
- (void)muteRemoteVideoStream:(id)arg1 mute:(BOOL)arg2;
- (void)stopAllRemoteView;
- (void)stopRemoteView:(id)arg1;
- (void)startRemoteView:(id)arg1 view:(id)arg2;
- (void)muteLocalVideo:(BOOL)arg1;
- (void)stopLocalPreview;
- (void)startLocalPreview:(id)arg1;
- (void)setDefaultStreamRecvMode:(BOOL)arg1 video:(BOOL)arg2;
- (void)switchRole:(long long)arg1;
- (void)exitRoomInternalWithStopCapture:(BOOL)arg1 reqExit:(BOOL)arg2 reason:(id)arg3;
- (void)exitRoom;
- (void)enterRoom:(id)arg1 appScene:(long long)arg2;
- (void)setDelegateQueue:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initInternal:(id)arg1 queue:(id)arg2;

@end

