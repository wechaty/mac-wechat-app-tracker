//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "IMessageExt-Protocol.h"
#import "MMService-Protocol.h"
#import "SendPatExt-Protocol.h"

@class NSMutableDictionary, NSString, SendPatWrap;

@interface SendPatMgr : MMService <IMessageExt, SendPatExt, MMService>
{
    NSMutableDictionary *_userNameToPatTimeMap;
    SendPatWrap *_lastSendPatWrap;
    NSMutableDictionary *_availableSendPatWraps;
    NSMutableDictionary *_serverIdToReceivePatWrapMap;
    NSMutableDictionary *_serverIdToDeletedPatWrapMap;
}

+ (void)updateMessageWrap:(id)arg1 fromWrap:(id)arg2;
+ (id)generatePatMessageFromWrap:(id)arg1;
+ (BOOL)isMessageWrapPatMessage:(id)arg1;
+ (id)filePathForServerIdToReceivePatWrapMap;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *serverIdToDeletedPatWrapMap; // @synthesize serverIdToDeletedPatWrapMap=_serverIdToDeletedPatWrapMap;
@property(retain, nonatomic) NSMutableDictionary *serverIdToReceivePatWrapMap; // @synthesize serverIdToReceivePatWrapMap=_serverIdToReceivePatWrapMap;
@property(retain, nonatomic) NSMutableDictionary *availableSendPatWraps; // @synthesize availableSendPatWraps=_availableSendPatWraps;
@property(retain, nonatomic) SendPatWrap *lastSendPatWrap; // @synthesize lastSendPatWrap=_lastSendPatWrap;
@property(retain, nonatomic) NSMutableDictionary *userNameToPatTimeMap; // @synthesize userNameToPatTimeMap=_userNameToPatTimeMap;
- (void)onRevokePatEnd:(BOOL)arg1 forUser:(id)arg2 n64MsgId:(long long)arg3 clientMsgId:(id)arg4;
- (void)onGetNewXmlMsg:(id)arg1 type:(id)arg2 msgData:(id)arg3;
- (id)getLastAppPatMessageWrapForChat:(id)arg1 createTime:(unsigned int)arg2;
- (id)getLastAppPatMessageWrapForChat:(id)arg1;
- (unsigned int)addPatWrap:(id)arg1 toChat:(id)arg2 newXMLMessageWrap:(id)arg3 index:(unsigned long long *)arg4;
- (BOOL)addPatMessageWrap:(id)arg1 toChat:(id)arg2;
- (id)messageWrapForPatMessageWithChatUserName:(id)arg1 andMessageLocalID:(unsigned int)arg2;
- (BOOL)isServerIdCorrespondToReceivePat:(long long)arg1;
- (void)saveServerIdToReceivePatWrapMap;
- (void)loadServerIdToReceivePatWrapMap;
- (unsigned int)receivePatWrapCacheInterval;
- (BOOL)needShowRevokeGuide;
- (BOOL)patHasNotBeenRevoked:(id)arg1 fromChat:(id)arg2;
- (void)revokeSendPat:(id)arg1;
- (id)sendPatForPat:(id)arg1 fromChat:(id)arg2;
- (void)normalRevokePatMessageForRevokeOnly:(id)arg1 fromChat:(id)arg2 forPatWrap:(id)arg3;
- (unsigned int)patSendLongPressRevokeInterval;
- (void)callRevokePatExtension:(id)arg1 fromChat:(id)arg2 isSuccess:(BOOL)arg3;
- (void)onRevokePat:(id)arg1 fromChat:(id)arg2 isSuccess:(BOOL)arg3;
- (void)onRevokeSendPat:(id)arg1 isSuccess:(BOOL)arg2 isCancelSending:(BOOL)arg3;
- (BOOL)deletePatWrap:(id)arg1 inMessageWrap:(id)arg2;
- (void)normalRevokePat:(id)arg1 fromChat:(id)arg2 patMessage:(id)arg3;
- (void)normalRevokeSendPat:(id)arg1;
- (void)fastRevokePat:(id)arg1 fromChat:(id)arg2 patMessage:(id)arg3;
- (void)fastRevokeSendPat:(id)arg1;
- (BOOL)shouldDoubleClickRevokePatForUser:(id)arg1 inchat:(id)arg2;
- (unsigned int)patSendDoubleTapRevokeInterval;
- (unsigned long long)numberOfPatsShowAfterFold;
- (unsigned long long)minNumberOfContinousPatsToFold;
- (unsigned long long)maxNumberOfContinousPats;
- (id)createSendPatTempleteFromPattedUserName:(id)arg1 withSuffix:(id)arg2;
- (void)updatePatSuffix:(id)arg1 serverId:(long long)arg2 forSendPatWrap:(id)arg3;
- (id)patSuffixForUserName:(id)arg1;
- (unsigned int)getMinFrequencyLimitInterval;
- (void)updatePatTimeForUsername:(id)arg1;
- (BOOL)hitFrequencyLimitForUserName:(id)arg1;
- (void)handleSendPat:(id)arg1;
- (void)delaySendPat:(id)arg1;
- (unsigned int)patSendDelayInterval;
- (BOOL)sendPat:(id)arg1;
- (id)revokeMessageSendUserName:(id)arg1 n64MsgId:(long long)arg2;
- (void)revokePat:(id)arg1 fromChat:(id)arg2 patMessage:(id)arg3 type:(unsigned long long)arg4;
- (void)revokeLastPat;
- (BOOL)sendPatToUser:(id)arg1 inchat:(id)arg2;
- (void)dealloc;
- (void)onServiceClearData;
- (void)onServiceInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

