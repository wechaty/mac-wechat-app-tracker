//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "AVVideoDataSource-Protocol.h"
#import "AVVideoDeviceDelegate-Protocol.h"
#import "AVVideoDeviceSessionDelegate-Protocol.h"
#import "AVVideoDeviceSetupSessionDelegate-Protocol.h"
#import "AccountServiceExt-Protocol.h"
#import "IContactMgrExt-Protocol.h"
#import "IGroupMgrExt-Protocol.h"
#import "IMessageExt-Protocol.h"
#import "MMCGIDelegate-Protocol.h"
#import "MMMultiTalkWindowDelegate-Protocol.h"
#import "MMNetExt-Protocol.h"
#import "MMService-Protocol.h"
#import "MMVoipBaseWindowControllerDelegate-Protocol.h"
#import "MMVoipUserNotificationDelegate-Protocol.h"
#import "MonoServiceMsgDelegate-Protocol.h"
#import "MonoServiceMsgLogicDelegate-Protocol.h"
#import "MultiTalkCgiDelegate-Protocol.h"
#import "MultitalkApiDelegate-Protocol.h"
#import "WXCAssistHelperDelegate-Protocol.h"
#import "WXCMultiTalkApiDelegate-Protocol.h"

@class AVVideoDevice, MMMultiTalkWindowController, MMTimer, MMVoipUserNotificationWindowController, NSMutableArray, NSMutableDictionary, NSString;

@interface MMMultiTalkMgr : MMService <IMessageExt, MMCGIDelegate, AccountServiceExt, WXCMultiTalkApiDelegate, MultitalkApiDelegate, WXCAssistHelperDelegate, MultiTalkCgiDelegate, AVVideoDeviceSetupSessionDelegate, AVVideoDataSource, AVVideoDeviceDelegate, AVVideoDeviceSessionDelegate, MonoServiceMsgDelegate, MMVoipUserNotificationDelegate, IContactMgrExt, IGroupMgrExt, MMVoipBaseWindowControllerDelegate, MMMultiTalkWindowDelegate, MonoServiceMsgLogicDelegate, MMNetExt, MMService>
{
    struct __CVBuffer *rotatedBuffer;
    BOOL _m_videoDeviceRunning;
    BOOL _m_haveBigVideoSubscriber;
    BOOL _m_multiTalkReady;
    BOOL _m_isCalling;
    BOOL _isLockScreen;
    BOOL _isNoNetwork;
    unsigned int _currentMessageId;
    unsigned int _m_nextCanJoinTalkTime;
    unsigned int _m_nextCanCreateTalkTime;
    unsigned int _m_nextCanOpenCameraTime;
    int _mode;
    AVVideoDevice *_m_videoDevice;
    NSMutableDictionary *__currentSDKModeList;
    NSMutableArray *_m_cgiList;
    NSMutableDictionary *_m_renderDic;
    NSMutableDictionary *_m_videoInfoDic;
    NSString *_m_talkingGroupId;
    NSMutableDictionary *_m_bannerInfoList;
    NSMutableDictionary *_m_lastBannerTsList;
    NSMutableDictionary *_m_invitedFlagList;
    MMVoipUserNotificationWindowController *_m_VoipUserNotiWindowController;
    MMMultiTalkWindowController *_m_multiTalkWindowController;
    NSString *_m_otherDevicehandlerGroupId;
    MMTimer *_netStatusTimer;
}

- (void).cxx_destruct;
@property(nonatomic) BOOL isNoNetwork; // @synthesize isNoNetwork=_isNoNetwork;
@property(retain, nonatomic) MMTimer *netStatusTimer; // @synthesize netStatusTimer=_netStatusTimer;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) BOOL isLockScreen; // @synthesize isLockScreen=_isLockScreen;
@property(retain, nonatomic) NSString *m_otherDevicehandlerGroupId; // @synthesize m_otherDevicehandlerGroupId=_m_otherDevicehandlerGroupId;
@property(retain, nonatomic) MMMultiTalkWindowController *m_multiTalkWindowController; // @synthesize m_multiTalkWindowController=_m_multiTalkWindowController;
@property(retain, nonatomic) MMVoipUserNotificationWindowController *m_VoipUserNotiWindowController; // @synthesize m_VoipUserNotiWindowController=_m_VoipUserNotiWindowController;
@property(retain, nonatomic) NSMutableDictionary *m_invitedFlagList; // @synthesize m_invitedFlagList=_m_invitedFlagList;
@property(retain, nonatomic) NSMutableDictionary *m_lastBannerTsList; // @synthesize m_lastBannerTsList=_m_lastBannerTsList;
@property(retain, nonatomic) NSMutableDictionary *m_bannerInfoList; // @synthesize m_bannerInfoList=_m_bannerInfoList;
@property(nonatomic) unsigned int m_nextCanOpenCameraTime; // @synthesize m_nextCanOpenCameraTime=_m_nextCanOpenCameraTime;
@property(nonatomic) unsigned int m_nextCanCreateTalkTime; // @synthesize m_nextCanCreateTalkTime=_m_nextCanCreateTalkTime;
@property(nonatomic) unsigned int m_nextCanJoinTalkTime; // @synthesize m_nextCanJoinTalkTime=_m_nextCanJoinTalkTime;
@property(nonatomic) BOOL m_isCalling; // @synthesize m_isCalling=_m_isCalling;
@property(nonatomic) BOOL m_multiTalkReady; // @synthesize m_multiTalkReady=_m_multiTalkReady;
@property(nonatomic) unsigned int currentMessageId; // @synthesize currentMessageId=_currentMessageId;
@property(retain, nonatomic) NSString *m_talkingGroupId; // @synthesize m_talkingGroupId=_m_talkingGroupId;
@property(nonatomic) BOOL m_haveBigVideoSubscriber; // @synthesize m_haveBigVideoSubscriber=_m_haveBigVideoSubscriber;
@property(retain, nonatomic) NSMutableDictionary *m_videoInfoDic; // @synthesize m_videoInfoDic=_m_videoInfoDic;
@property(retain, nonatomic) NSMutableDictionary *m_renderDic; // @synthesize m_renderDic=_m_renderDic;
@property(retain, nonatomic) NSMutableArray *m_cgiList; // @synthesize m_cgiList=_m_cgiList;
@property(retain, nonatomic) NSMutableDictionary *_currentSDKModeList; // @synthesize _currentSDKModeList=__currentSDKModeList;
@property(nonatomic) BOOL m_videoDeviceRunning; // @synthesize m_videoDeviceRunning=_m_videoDeviceRunning;
@property(retain, nonatomic) AVVideoDevice *m_videoDevice; // @synthesize m_videoDevice=_m_videoDevice;
- (void)OnResponseCGI:(BOOL)arg1 sessionId:(unsigned int)arg2 cgiWrap:(id)arg3;
- (void)showNetworkBanner;
- (void)clearNetstatusTimer;
- (void)onNetStatusChange:(int)arg1;
- (void)quitMultiTalkAndClearBannerInfoWithGroupName:(id)arg1;
- (void)onModifyContacts:(id)arg1;
- (void)OnQuitGroup:(id)arg1;
- (BOOL)onMonoServiceMsgCancelWithMsg:(id)arg1;
- (BOOL)onMonoServiceMsgRejectWithMsg:(id)arg1;
- (void)onMonoServiceMsgStartWithMsg:(id)arg1;
- (BOOL)isMonoServiceCheckingServer;
- (BOOL)isMonoServiceUIWorking;
- (BOOL)isMonoServiceUIExist;
- (void)onReciveCallCancle;
- (void)didWindowClose;
- (void)onMultiTalkUserNotificationReceiveTimeOutWithGroup:(id)arg1;
- (void)onMultiTalkUserNotificationRejectWithGroup:(id)arg1;
- (void)hasNotAudioMicDeviceAuthorized;
- (void)onMultiTalkUserNotificationAcceptWithGroup:(id)arg1;
- (void)showMultiTalkUserNotification:(id)arg1;
- (void)onMultiTalkWindowMicAudioOn:(BOOL)arg1;
- (void)onMultiTalkWindowReceiveSwithCamare:(BOOL)arg1;
- (void)onMultiTalkWindowRecoverVideoOn:(BOOL)arg1;
- (void)onMultiTalkWindowUpdateMessageWith:(id)arg1 duration:(unsigned int)arg2 messageId:(unsigned int)arg3;
- (void)onMultiTalkWindowAddMember:(id)arg1 withGroup:(id)arg2;
- (void)onMultiTalkWindowReceiveCancelCallWithGroup:(id)arg1;
- (void)onMultiTalkWindowHangup:(id)arg1;
- (void)windowDidColsed:(id)arg1;
- (id)getMultiTalkUserNameListWithPrivacy:(id)arg1;
- (void)onMultiTalkBannerChange:(id)arg1 WxGroupId:(id)arg2;
- (void)onMultiTalkBannerChange:(id)arg1;
- (void)onOtherDeviceHandleTalk:(id)arg1;
- (void)onMultiTalkNotAllowCameraLimit:(unsigned int)arg1;
- (void)onMultiTalkCreateLimit:(unsigned int)arg1;
- (void)onMultiTalkJoinLimit:(unsigned int)arg1;
- (void)onMultiTalkRedirectOk;
- (void)onVideoData:(unsigned int)arg1 Bgra:(char *)arg2 Width:(unsigned int)arg3 Height:(unsigned int)arg4 frontCamera:(BOOL)arg5;
- (void)OnVideoStateChange:(BOOL)arg1 VideoOn:(BOOL)arg2;
- (void)onMultiTalkAudioDeviceUnPlugin;
- (void)onMultiTalkAudioDevicePlugin;
- (void)onReceiveVideoMemberChangeMsg:(id)arg1 extArray:(id)arg2;
- (void)onReceiveSubscribeMemberChangeMsg:(int)arg1;
- (void)onReceiveReawakeOrPokerMsg:(id)arg1 extData:(id)arg2;
- (void)onReawakeFriendOrSendPokerToFriendResult:(BOOL)arg1;
- (void)onRespActiveGroupBriefInfoList:(id)arg1 isSuccess:(BOOL)arg2;
- (void)onMultiTalkDeviceLauchSuccess;
- (void)onReceiveMutilTalkPokerMsg;
- (void)OnSysCallNotifyInterrupt:(int)arg1;
- (void)onAddMultiTalkMemberResult:(BOOL)arg1 groupInfo:(id)arg2;
- (void)onErr:(int)arg1 groupUserName:(id)arg2;
- (void)onSpeakerStateChange:(BOOL)arg1;
- (void)onMuteStateChange:(BOOL)arg1;
- (void)onMultiTalkReady;
- (void)onMemberChange:(id)arg1;
- (void)onReceiveMissMultiTalk:(id)arg1;
- (void)onInviteOrAcceptTimeout:(id)arg1;
- (void)onEnterMultiTalk:(id)arg1;
- (void)onCreateMultiTalk:(id)arg1;
- (void)onCancelCreateMultiTalk:(id)arg1;
- (void)onInviteMultiTalk:(id)arg1;
- (void)showMultiTalkBanner:(BOOL)arg1 group:(id)arg2 roomId:(unsigned int)arg3 roomKey:(unsigned long long)arg4;
- (BOOL)isMultiTalkValidWithWxGroupId:(id)arg1;
- (id)getMultiTalkBannerItemWithGroupId:(id)arg1;
- (BOOL)deleteMultiTalkBannerItemWithGroupId:(id)arg1;
- (BOOL)insertMultiTalkBannerItem:(id)arg1;
- (void)loadMultiTalkBannerInfoList;
- (void)onRespBuffer:(id)arg1 functionId:(unsigned int)arg2 seq:(unsigned int)arg3 retCode:(int)arg4;
- (void)startCgiWithFunctionId:(unsigned int)arg1 buffer:(id)arg2 seq:(unsigned int)arg3;
- (void)sendMultiTalkRequset:(int)arg1 reqData:(id)arg2 cgiType:(int)arg3;
- (void)writeLog:(int)arg1 tag:(id)arg2 content:(id)arg3;
- (void)onGetNewXmlMsg:(id)arg1 type:(id)arg2 msgData:(id)arg3;
- (void)forceToCloseAllWindow;
- (void)onUserLogout;
- (void)onCurrentDeviceLockStateChanged:(BOOL)arg1;
- (void)FFAddRecvFavZZ:(BOOL)arg1;
- (int)GetFrmType;
- (int)VideoDevPutData:(int)arg1 frmData:(char *)arg2 imageWidth:(unsigned int)arg3 imageHeight:(unsigned int)arg4;
- (void)videoDevice:(id)arg1 didFailWithError:(id)arg2;
- (void)videoDeviceSessionFinished:(id)arg1;
- (void)videoDeviceSessionBegan:(id)arg1;
- (void)videoDeviceCameraBack:(id)arg1;
- (void)videoDeviceCameraFront:(id)arg1;
- (void)onVideoSessionSetupComplete;
- (void)onVideoSessionChangeCameraComplete;
- (void)onVideoSessionStopComplete;
- (void)onVideoSessionStartComplete;
- (void)stopVideoDevice;
- (void)startVideoDevice;
- (void)setupVideoDevice;
- (void)clearVideoDevice;
- (BOOL)isMultiTalkNotificationActive;
- (BOOL)isMultiTalkWindowActive;
- (BOOL)isMultiTalkActive;
- (BOOL)checkExclusiveTaskCanStart;
- (void)joinMultiTalkWithGroupUserName:(id)arg1;
- (void)joinMultiTalkWithGroup:(id)arg1 roomId:(unsigned int)arg2 roomKey:(unsigned long long)arg3;
- (void)docreateMultiTalkWithContacts:(id)arg1 withChatroomUsername:(id)arg2;
- (void)sendRequest:(id)arg1 Retry:(int)arg2;
- (void)createMultiTalkWithContacts:(id)arg1 withChatroomUsername:(id)arg2;
- (int)getCurrentMode;
- (void)orderFrontVoipWindow;
- (id)getOtherDeviceHandlerGroupId;
- (id)getCurrentTalkingGroupId;
- (void)setCurrentSDKMode:(id)arg1 sdkMode:(int)arg2;
- (int)getCurrentSDKMode:(id)arg1;
- (void)rejectCall:(id)arg1;
- (int)engineDoMemberSelectForView:(id)arg1;
- (int)setNeedBigVideo:(BOOL)arg1 forUser:(id)arg2;
- (int)getMemberIdByUserName:(id)arg1;
- (id)getMemberQualityInfoList:(id)arg1;
- (id)getTalkIngMember:(id)arg1;
- (id)getRenderForUsername:(id)arg1;
- (id)getRenderForMemberId:(unsigned int)arg1;
- (int)inviteUserType:(id)arg1;
- (unsigned long long)maxMultiTalkMemberCount;
- (void)onServiceTerminate;
- (void)onServiceWillSleep;
- (void)onServiceClearData;
- (void)onServiceInit;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

