//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSMutableArray, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AURenderCallbackStruct {
    CDUnknownFunctionPointerType inputProc;
    void *inputProcRefCon;
};

struct AndroidReport_t {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int mNumberBuffers;
    struct AudioBuffer mBuffers[1];
};

struct AudioDecoder {
    void *_field1;
    void *_field2;
    int _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    void *_field10;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AutoBuffer {
    char *_field1;
    long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct BatchSnsReqImageData;

struct BufNode {
    struct opaqueCMSampleBuffer *_field1;
    struct BufNode *_field2;
    int _field3;
};

struct C2CDownloadRequest {
    _Bool use_uniform_callback;
    struct shared_ptr<mars::cdn::TaskCallback> sp_callback;
    basic_string_8e19b51d debugip;
    basic_string_8e19b51d authkey;
    basic_string_8e19b51d filekey;
    void *user_context;
    basic_string_8e19b51d arg_info;
    int queue_timeout_seconds;
    int transfor_timeout_seconds;
    basic_string_8e19b51d statefile;
    basic_string_8e19b51d expected_filemd5;
    unsigned long long expected_filesize;
    basic_string_8e19b51d savepath;
    unsigned long long filesize_max;
    basic_string_8e19b51d aeskey;
    int filetype;
    int apptype;
    int bizid;
    unsigned int concurrent_count;
    _Bool use_multithread;
    basic_string_8e19b51d custom_request_header;
    unsigned long long filesize_hint;
    int download_behavior;
    basic_string_8e19b51d flowtag;
    _Bool issmallvideo;
    int islargesvide;
    int request_video_format;
    int videoflag_policy;
    basic_string_8e19b51d request_videoflag;
    _Bool is_hlsvideo;
    basic_string_8e19b51d hls_videoflag;
    int predownload_ratio;
    long long predownload_minsize;
    _Bool is_hot_snsvideo;
    int videomode;
    basic_string_8e19b51d msg_extra;
    basic_string_8e19b51d fileid;
    basic_string_8e19b51d bigfile_signture;
    basic_string_8e19b51d fakeBigfileSignature;
    basic_string_8e19b51d fakeBigfileSignatureAeskey;
    _Bool isstoragemode;
    _Bool isautostart;
    _Bool is_silent_task;
    int chattype;
    unsigned int blocksize;
    int expect_image_format;
    long long max_retry_count;
    _Bool is_cold_snsdata;
    basic_string_8e19b51d url;
    basic_string_8e19b51d sns_scene;
    unsigned long long sns_decrypt_key;
    basic_string_8e19b51d snsvideo_extradata;
    int msg_type_;
    basic_string_8e19b51d feed_id_;
    int feed_pic_count_;
    struct vector<mars::cdn::BatchSnsReqImageData, std::allocator<mars::cdn::BatchSnsReqImageData>> batch_image_req_datas;
    basic_string_8e19b51d referer;
    struct QuicTaskParams quic_task_params;
    unsigned long long task_start_time;
    basic_string_8e19b51d http_method;
    _Bool use_newdns;
    _Bool use_cronet;
    int certificate_policy;
    basic_string_8e19b51d host;
    unsigned int max_http_redirect_count;
    basic_string_8e19b51d bakup_url;
    struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> verify_headers;
    unsigned int pcdn_appid;
    int max_pcdn_connections;
    CDUnknownFunctionPointerType decoder;
    unsigned int backup_offset;
    unsigned int backup_length;
    unsigned long long initial_offset;
    unsigned long long initial_length;
};

struct C2CUploadRequest {
    _Bool _field1;
    struct shared_ptr<mars::cdn::TaskCallback> _field2;
    basic_string_8e19b51d _field3;
    basic_string_8e19b51d _field4;
    int _field5;
    int _field6;
    int _field7;
    basic_string_8e19b51d _field8;
    void *_field9;
    basic_string_8e19b51d _field10;
    int _field11;
    int _field12;
    basic_string_8e19b51d _field13;
    basic_string_8e19b51d _field14;
    basic_string_8e19b51d _field15;
    basic_string_8e19b51d _field16;
    basic_string_8e19b51d _field17;
    int _field18;
    int _field19;
    unsigned int _field20;
    basic_string_8e19b51d _field21;
    int _field22;
    basic_string_8e19b51d _field23;
    _Bool _field24;
    _Bool _field25;
    basic_string_8e19b51d _field26;
    basic_string_8e19b51d _field27;
    basic_string_8e19b51d _field28;
    int _field29;
    _Bool _field30;
    basic_string_8e19b51d _field31;
    basic_string_8e19b51d _field32;
    basic_string_8e19b51d _field33;
    basic_string_8e19b51d _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    basic_string_8e19b51d _field39;
    _Bool _field40;
    basic_string_8e19b51d _field41;
    basic_string_8e19b51d _field42;
    int _field43;
    struct vector<mars::cdn::FileID, std::allocator<mars::cdn::FileID>> _field44;
    struct vector<mars::cdn::CheckHitFileInfo, std::allocator<mars::cdn::CheckHitFileInfo>> _field45;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CTLineLayoutParams {
    double _field1;
    double _field2;
    double _field3;
    struct CGRect _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    struct __CFArray *_field11;
};

struct CdnCallback;

struct CheckHitFileInfo;

struct CodedInputData {
    id _field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct CodedOutputData {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct ComponentInstanceRecord {
    long long _field1[1];
};

struct Config {
    int _field1;
    int _field2;
    int _field3;
    basic_string_8e19b51d _field4;
    struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> _field5;
    struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> _field6;
};

struct ConnId {
    unsigned short _field1;
};

struct ConnStatInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct ContactInitSeqs {
    unsigned int currentWxcontactSeq;
    unsigned int currentChatRoomContactSeq;
};

struct DialReport_t {
    unsigned long long llUin;
    unsigned long long llRoomKey;
    unsigned long long iRoomId;
    unsigned int iRoomMemberId;
    unsigned int iStopStatus;
    int iReqRet;
    int iReserve;
    int iUsedTime;
    unsigned char isCanConnect;
    unsigned char isGotPeerId;
    unsigned char isGotStrategy;
    unsigned char isConnected;
    unsigned char isCanTalk;
    unsigned char isGotCapInfo;
    unsigned char isTalked;
    unsigned int iDoubleLinkSwitchReqCnt;
    unsigned int iDoubleLinkSwitchSucToDirectCnt;
    unsigned int iDoubleLinkSwitchSucToRelayCnt;
    unsigned int iEncryptStrategy;
    unsigned int iQosStrategy;
    unsigned int iQualityRedirectReqCnt;
    unsigned int iQualityDoRedirectCnt;
    unsigned int iTcpSwitchThreshold;
    unsigned int iCloudAppId;
    unsigned int iCloudHwpId;
};

struct ExtReport_t {
    char _field1[256];
    char _field2[256];
    char _field3[256];
    char _field4[256];
    int _field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    int _field10;
};

struct FileID;

struct FullReportUploadObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct HostIPHint {
    struct vector<mars::cdn::HostIpMap, std::allocator<mars::cdn::HostIpMap>> host_map;
};

struct HostIpMap;

struct IBrowsingService {
    CDUnknownFunctionPointerType *_field1;
};

struct IMVQQEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct IMultiTalkMgr {
    struct MultiTalkMgrImpl *_field1;
};

struct ITPAudioRouteManagerCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayer {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayerConnectionMgr {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayerRichMediaProcessor;

struct ITPRendererInterruptCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPSubtitleParser {
    CDUnknownFunctionPointerType *_field1;
};

struct ITransportChannel {
    CDUnknownFunctionPointerType *_field1;
};

struct IWXConfCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct IWXConfService {
    CDUnknownFunctionPointerType *_field1;
};

struct IWeChatBrowserManager {
    CDUnknownFunctionPointerType *_field1;
};

struct ImagePlane {
    int _field1;
    int _field2;
    int _field3;
    void *_field4;
    void *_field5[4];
    long long _field6[4];
};

struct KSJSONDecodeCallbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
};

struct KSStackCursor {
    struct {
        unsigned long long _field1;
        char *_field2;
        unsigned long long _field3;
        char *_field4;
        unsigned long long _field5;
    } _field1;
    struct {
        int _field1;
        _Bool _field2;
    } _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6[100];
};

struct LogUploadObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
};

struct MTLResourceID {
    unsigned long long _field1;
};

struct MultiTalkMgrImpl;

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NewAVExtReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct NewDirectReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned long long _field55;
    unsigned long long _field56;
    unsigned int _field57;
    int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    char _field63[46];
    char _field64[46];
    char _field65[46];
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned int _field69;
    unsigned int _field70;
};

struct NewRelayReport {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    int _field60;
    char _field61[46];
    char _field62[46];
    char _field63[46];
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
};

struct PBClassInfo {
    unsigned int _field1;
    char **_field2;
    unsigned long long *_field3;
    unsigned long long *_field4;
    CDStruct_183601bc *_field5;
};

struct ParaOCRResult;

struct ProxyInfo {
    int type;
    basic_string_8e19b51d host;
    basic_string_8e19b51d ip;
    unsigned short port;
    basic_string_8e19b51d username;
    basic_string_8e19b51d password;
};

struct QBAR_INFO;

struct QBar {
    struct QBarDecode *_field1;
};

struct QBarDecode;

struct QuicForceHost;

struct QuicHostMap;

struct QuicTaskParams {
    struct vector<mars::cdn::QuicHostMap, std::allocator<mars::cdn::QuicHostMap>> quic_host_map;
    struct vector<mars::cdn::QuicForceHost, std::allocator<mars::cdn::QuicForceHost>> force_quic_host;
    struct HostIPHint host_map_hint;
};

struct RelayTcpReport {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    char _field40[46];
    char _field41[46];
    char _field42[46];
};

struct StackInfo {
    unsigned long long **_field1;
    int *_field2;
};

struct TPACodecPropertyRange {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct TPAVProgramInfo;

struct TPAssetProxyLoaderCallback {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    id _field3;
};

struct TPAudioRouteDescription;

struct TPDetailInfo {
    int _field1;
    long long _field2;
    long long _field3;
};

struct TPFrame {
    int _field1;
    char *_field2[8];
    int _field3[8];
    char **_field4;
    int _field5;
    int _field6;
    int _field7;
    long long _field8;
    long long _field9;
    void *_field10;
    long long _field11;
    int _field12;
    struct TPFrameSideData **_field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    struct TPRational _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned long long _field24;
    unsigned long long _field25;
    unsigned long long _field26;
    unsigned long long _field27;
    int _field28;
    int _field29;
    int _field30;
    unsigned long long _field31;
    int _field32;
    struct TPFrameReleaseDataCB _field33;
    struct TPFrameReleasePlanarDataCB _field34;
    struct TPFrameInternal *_field35;
    int _field36;
};

struct TPFrameInternal;

struct TPFrameReleaseDataCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct TPFrameReleasePlanarDataCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct TPFrameSideData;

struct TPJitterBufferConfigParams {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct TPMediaTrackInfo;

struct TPPlayerConnectionNode {
    CDUnknownFunctionPointerType *_field1;
    struct map<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps, std::less<TPPlayerConnectionNode::Action>, std::allocator<std::pair<const TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> _field2;
};

struct TPPlayerInitConfig {
    struct map<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> m_queueIntMap;
    struct map<TPPlayerInitConfig::KeyType, std::deque<std::string>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<std::string>>>> m_queueStringMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> m_intMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> m_longMap;
    struct map<TPPlayerInitConfig::KeyType, bool, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, bool>>> m_boolMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> m_floatMap;
    struct map<TPPlayerInitConfig::KeyType, std::shared_ptr<void>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> m_objectMap;
};

struct TPPlayerRichMediaExtraRequestInfo {
    int _field1;
};

struct TPPlayerRichMediaFeature;

struct TPPlayerRichMediaProcessorCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    id _field4;
    id _field5;
};

struct TPRational {
    int _field1;
    int _field2;
};

struct TPSubtitleParserCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    id _field4;
};

struct TPThumbPlayerAudioFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerDemuxerCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerMessageCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerPostProcessFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerSubtitleFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerVideoFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPVCodecMaxCapability {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct TPVCodecPropertyRange {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct TaskCallback;

struct VOIPChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPNetNotifier {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPSpeedTestChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct WCTColumnBinding;

struct WCTExpr {
    basic_string_8e19b51d _field1;
    Class _field2;
    struct shared_ptr<WCTColumnBinding> _field3;
    Class _field4;
};

struct WXTalkEngineAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WxConfSDKCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct WxMediaInfoPara {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct WxVideoTransPara {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct XmlReaderAttr_t;

struct XmlReaderNode_t {
    int _field1;
    char *_field2;
    struct XmlReaderNode_t *_field3;
    struct XmlReaderNode_t *_field4;
    struct XmlReaderNode_t *_field5;
    struct XmlReaderNode_t **_field6;
    struct XmlReaderAttr_t *_field7;
    struct XmlReaderAttr_t **_field8;
    int _field9;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _SpeedTestInfo {
    int roomId;
    unsigned long long roomKey;
    unsigned int callType;
    unsigned int isConnecting;
    unsigned int isConnected;
    unsigned int c2Clossrate;
    unsigned int c2CrttCnt;
    NSMutableArray *c2Crtt;
    unsigned int c2SdownLossRate;
    unsigned int c2SrttCnt;
    NSMutableArray *c2Srtt;
    unsigned int sendPkts;
    unsigned int rcvPkts;
};

struct _VoipCgiRtt {
    unsigned int mCgiRttInterval[6];
    unsigned int mCgiRtt[6];
};

struct __CFString;

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __siginfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    union sigval _field8;
    long long _field9;
    unsigned long long _field10[7];
};

struct __tree_end_node<std::__tree_node_base<void *>*> {
    void *__left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct deque<TPAudioRouteDescription, std::allocator<TPAudioRouteDescription>> {
    struct __split_buffer<TPAudioRouteDescription *, std::allocator<TPAudioRouteDescription *>> {
        struct TPAudioRouteDescription **__first_;
        struct TPAudioRouteDescription **__begin_;
        struct TPAudioRouteDescription **__end_;
        struct __compressed_pair<TPAudioRouteDescription **, std::allocator<TPAudioRouteDescription *>> {
            struct TPAudioRouteDescription **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<TPAudioRouteDescription>> {
        unsigned long long __value_;
    } __size_;
};

struct dl_info {
    char *_field1;
    void *_field2;
    char *_field3;
    void *_field4;
};

struct function<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
    struct __value_func<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<void (NSString *, NSDictionary *)> {
    struct __value_func<void (NSString *, NSDictionary *)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const char *, std::vector<sqlitelint::Issue>)> {
    struct __value_func<void (const char *, std::vector<sqlitelint::Issue>)> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<std::string, std::allocator<std::string>> {
    struct __list_node_base<std::string, void *> {
        void *_field1;
        void *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::string, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<TPCodecID, TPVCodecMaxCapability, std::less<TPCodecID>, std::allocator<std::pair<const TPCodecID, TPVCodecMaxCapability>>> {
    struct __tree<std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>, std::allocator<std::__value_type<TPCodecID, TPVCodecMaxCapability>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPCodecID, TPVCodecMaxCapability>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps, std::less<TPPlayerConnectionNode::Action>, std::allocator<std::pair<const TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> {
    struct __tree<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::__map_value_compare<TPPlayerConnectionNode::Action, std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::less<TPPlayerConnectionNode::Action>, true>, std::allocator<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerConnectionNode::Action, std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::less<TPPlayerConnectionNode::Action>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, bool, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, bool>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, bool>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, bool>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::deque<std::string>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<std::string>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::shared_ptr<void>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, std::string, std::less<int>, std::allocator<std::pair<const int, std::string>>> {
    struct __tree<std::__value_type<int, std::string>, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>, std::allocator<std::__value_type<int, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<int, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, tagEmojiItem *, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, tagEmojiItem *>>> {
    struct __tree<std::__value_type<unsigned long long, tagEmojiItem *>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, tagEmojiItem *>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, tagEmojiItem *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, tagEmojiItem *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, tagEmojiItem *>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__value_type<unsigned long, unsigned long>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned long>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, unsigned long>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned long>, std::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct opaqueCMSampleBuffer;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct set<ITPAudioRouteManagerCallback *, std::less<ITPAudioRouteManagerCallback *>, std::allocator<ITPAudioRouteManagerCallback *>> {
    struct __tree<ITPAudioRouteManagerCallback *, std::less<ITPAudioRouteManagerCallback *>, std::allocator<ITPAudioRouteManagerCallback *>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<ITPAudioRouteManagerCallback *, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<ITPAudioRouteManagerCallback *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<CdnCallback> {
    struct CdnCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ITPPlayerRichMediaProcessor> {
    struct ITPPlayerRichMediaProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCTColumnBinding> {
    struct WCTColumnBinding *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mars::cdn::TaskCallback> {
    struct TaskCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct tagAVQualityReportInfo {
    struct tagMultiSendReport _field1[2];
    struct tagMultiRecvReport _field2[2];
    struct tagMultiRecvSubscribeReport _field3[2];
    struct tagScreenSendReport _field4;
    struct tagScreenRecvReport _field5;
    struct tagVHWEngineReport _field6;
    struct tagVCodec2EngineReport _field7;
    struct tagVideoArqSendReport _field8;
    struct tagVideoArqRecvReport _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    unsigned short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned short _field40;
    unsigned short _field41;
    unsigned short _field42;
    unsigned short _field43;
    unsigned short _field44;
    unsigned short _field45;
    unsigned short _field46;
    unsigned short _field47;
    unsigned short _field48;
    unsigned short _field49;
    unsigned short _field50;
    unsigned short _field51;
    unsigned short _field52;
    unsigned short _field53;
    unsigned short _field54;
    unsigned short _field55;
    unsigned short _field56;
    unsigned short _field57;
    unsigned short _field58;
    unsigned short _field59;
    unsigned short _field60;
    unsigned short _field61;
    unsigned short _field62;
    unsigned short _field63;
    unsigned short _field64;
    unsigned short _field65;
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned short _field69;
    unsigned short _field70;
    unsigned short _field71;
    unsigned short _field72;
    unsigned short _field73;
    unsigned short _field74;
    unsigned short _field75;
    unsigned short _field76;
    unsigned short _field77;
    unsigned short _field78;
    unsigned short _field79;
    unsigned short _field80;
    unsigned short _field81;
    unsigned short _field82;
    unsigned short _field83;
    unsigned short _field84;
    unsigned short _field85;
    unsigned short _field86;
    unsigned short _field87;
    unsigned short _field88;
    unsigned short _field89;
    unsigned short _field90;
    unsigned short _field91;
    unsigned char _field92;
    unsigned char _field93;
    unsigned char _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned short _field97;
    unsigned short _field98;
    unsigned short _field99;
    unsigned short _field100;
    unsigned int _field101;
    unsigned int _field102;
    unsigned short _field103;
    unsigned char _field104;
    unsigned char _field105;
    unsigned char _field106;
    unsigned char _field107;
    unsigned char _field108;
    unsigned int _field109;
    unsigned int _field110;
    unsigned char _field111;
    unsigned char _field112;
    unsigned char _field113;
    unsigned char _field114;
    unsigned char _field115;
    unsigned char _field116;
    int _field117;
    int _field118;
    int _field119;
    unsigned int _field120;
    unsigned short _field121;
    unsigned short _field122;
    unsigned short _field123;
    unsigned char _field124;
    unsigned char _field125;
    unsigned int _field126;
    unsigned int _field127;
    unsigned int _field128;
    unsigned int _field129;
    unsigned int _field130;
    unsigned int _field131;
    unsigned int _field132;
    unsigned int _field133;
    unsigned int _field134;
    unsigned int _field135;
    unsigned int _field136;
    unsigned int _field137;
    unsigned int _field138;
    unsigned int _field139;
    unsigned int _field140;
    unsigned int _field141;
    unsigned int _field142;
    unsigned int _field143;
    unsigned int _field144;
    unsigned int _field145;
    unsigned int _field146;
    unsigned int _field147;
    unsigned int _field148;
    unsigned int _field149;
    unsigned int _field150;
    unsigned int _field151;
    unsigned int _field152;
    unsigned int _field153;
    unsigned int _field154;
    unsigned int _field155;
    unsigned int _field156;
    int _field157;
    int _field158;
    int _field159;
    int _field160;
    int _field161;
    unsigned int _field162;
    unsigned int _field163;
    unsigned int _field164;
    unsigned int _field165;
    unsigned char _field166;
    unsigned char _field167;
    unsigned short _field168;
    unsigned short _field169;
    unsigned short _field170;
    unsigned short _field171;
    unsigned short _field172;
    unsigned short _field173;
    unsigned short _field174;
    unsigned short _field175;
    unsigned short _field176;
    unsigned short _field177;
    unsigned char _field178;
    unsigned char _field179;
    unsigned char _field180;
    unsigned char _field181;
    unsigned char _field182;
    unsigned short _field183;
    unsigned short _field184;
    unsigned short _field185;
    unsigned short _field186;
    unsigned short _field187;
    unsigned short _field188;
    unsigned short _field189;
    unsigned short _field190;
    unsigned short _field191;
    unsigned short _field192;
    unsigned short _field193;
    unsigned short _field194;
    unsigned short _field195;
    unsigned short _field196;
    unsigned short _field197;
    unsigned short _field198;
    unsigned short _field199;
    unsigned short _field200;
    unsigned short _field201;
    unsigned short _field202;
    unsigned short _field203;
    unsigned short _field204;
    unsigned short _field205;
    unsigned short _field206;
    unsigned short _field207;
    unsigned short _field208;
    unsigned short _field209;
    unsigned short _field210;
    unsigned short _field211;
    unsigned short _field212;
    unsigned short _field213;
    unsigned short _field214;
    unsigned short _field215;
    unsigned short _field216;
    unsigned short _field217;
    unsigned short _field218;
    unsigned short _field219;
    unsigned short _field220;
    unsigned short _field221;
    unsigned short _field222;
    unsigned int _field223;
    unsigned int _field224;
    unsigned int _field225;
    unsigned int _field226;
    unsigned int _field227;
    unsigned int _field228;
    unsigned int _field229;
    unsigned int _field230;
    unsigned int _field231;
    unsigned int _field232;
    unsigned int _field233;
    unsigned int _field234;
    unsigned int _field235;
    unsigned int _field236;
    unsigned int _field237;
    unsigned int _field238;
    unsigned int _field239;
    unsigned int _field240;
    unsigned int _field241;
    unsigned int _field242;
    unsigned char _field243;
    unsigned char _field244;
    unsigned char _field245;
    unsigned char _field246;
    unsigned char _field247;
    int _field248;
    unsigned int _field249;
    unsigned int _field250;
    unsigned int _field251;
    int _field252;
    unsigned short _field253;
    unsigned short _field254;
    unsigned short _field255;
    unsigned short _field256;
    unsigned short _field257;
    unsigned short _field258;
    unsigned short _field259;
    unsigned short _field260;
    unsigned short _field261;
    unsigned short _field262;
    unsigned short _field263;
    unsigned short _field264;
    unsigned short _field265;
    unsigned short _field266;
    unsigned short _field267;
    unsigned short _field268;
    unsigned int _field269;
    unsigned int _field270;
    unsigned int _field271;
    unsigned short _field272;
    unsigned short _field273;
    unsigned short _field274;
    unsigned short _field275;
    unsigned short _field276;
    unsigned short _field277;
    unsigned short _field278;
    unsigned short _field279;
    unsigned int _field280;
    unsigned int _field281;
    unsigned int _field282;
    unsigned int _field283;
    unsigned int _field284;
    unsigned int _field285;
    unsigned int _field286;
    unsigned int _field287;
    unsigned int _field288;
    unsigned int _field289;
    unsigned int _field290;
    unsigned int _field291;
    unsigned int _field292;
    unsigned int _field293;
    unsigned int _field294;
    unsigned int _field295;
    unsigned int _field296;
    unsigned int _field297;
    unsigned int _field298;
    unsigned int _field299;
    unsigned int _field300;
    unsigned int _field301;
    unsigned int _field302;
    unsigned int _field303;
    unsigned int _field304;
    unsigned int _field305;
    unsigned int _field306;
    unsigned int _field307;
    unsigned int _field308;
    unsigned int _field309;
    unsigned int _field310;
    unsigned int _field311;
    unsigned int _field312;
    int _field313;
    int _field314;
    unsigned int _field315;
    unsigned int _field316;
    int _field317;
    int _field318;
    int _field319;
    int _field320;
    int _field321;
    int _field322;
    int _field323;
    int _field324;
    int _field325;
    int _field326;
    int _field327;
    int _field328;
    unsigned short _field329;
    unsigned short _field330;
    unsigned short _field331;
    unsigned short _field332;
    unsigned short _field333;
    unsigned short _field334;
    unsigned short _field335;
    unsigned short _field336;
    unsigned char _field337;
    unsigned char _field338;
    unsigned char _field339;
    unsigned char _field340;
    unsigned char _field341;
    unsigned char _field342;
    int _field343;
    unsigned int _field344;
    unsigned int _field345;
    unsigned int _field346;
    unsigned int _field347;
    unsigned int _field348;
    unsigned int _field349;
    unsigned int _field350;
    unsigned int _field351;
    unsigned int _field352;
    unsigned int _field353;
    unsigned int _field354;
    unsigned int _field355;
    unsigned int _field356;
    unsigned int _field357;
    int _field358;
    int _field359;
    int _field360;
    int _field361;
    int _field362;
    int _field363;
    int _field364;
    int _field365;
    int _field366;
    int _field367;
    unsigned int _field368;
    unsigned int _field369;
    unsigned int _field370;
    unsigned int _field371;
    unsigned int _field372;
    unsigned int _field373;
    unsigned int _field374;
    unsigned int _field375;
    unsigned int _field376;
    unsigned int _field377;
    unsigned int _field378;
    unsigned int _field379;
    unsigned int _field380;
    unsigned int _field381;
    unsigned int _field382;
    unsigned int _field383;
    unsigned int _field384;
    unsigned int _field385;
    unsigned int _field386;
    unsigned int _field387;
    unsigned int _field388;
    unsigned int _field389;
    unsigned int _field390;
    unsigned int _field391;
    unsigned int _field392;
    unsigned int _field393;
    unsigned int _field394;
    unsigned int _field395;
    unsigned int _field396;
    unsigned int _field397;
    unsigned int _field398;
    unsigned int _field399;
    unsigned int _field400;
    unsigned int _field401;
    unsigned int _field402;
    unsigned int _field403;
    unsigned int _field404;
    unsigned int _field405;
    unsigned int _field406;
    unsigned int _field407;
    unsigned int _field408;
    unsigned int _field409;
    unsigned int _field410;
    unsigned int _field411;
    unsigned int _field412;
    unsigned int _field413;
    unsigned int _field414;
    unsigned int _field415;
    unsigned int _field416;
    unsigned int _field417;
    unsigned int _field418;
    unsigned int _field419;
    unsigned int _field420;
    unsigned int _field421;
    unsigned int _field422;
    unsigned int _field423;
    unsigned int _field424;
    unsigned int _field425;
    unsigned short _field426;
    unsigned short _field427;
    unsigned int _field428;
    unsigned int _field429;
    unsigned int _field430;
    unsigned int _field431;
    unsigned int _field432;
    unsigned int _field433;
    unsigned int _field434;
    unsigned int _field435;
    long long _field436;
    unsigned short _field437;
    unsigned int _field438;
    int _field439;
    int _field440;
    int _field441;
    int _field442;
    unsigned int _field443;
    unsigned int _field444;
    unsigned int _field445;
    unsigned int _field446;
    unsigned int _field447;
    unsigned int _field448;
    unsigned int _field449;
    unsigned int _field450;
    unsigned int _field451;
    int _field452;
    int _field453;
    unsigned short _field454;
    unsigned short _field455;
    unsigned short _field456;
    unsigned int _field457;
    unsigned int _field458;
    unsigned int _field459;
    unsigned int _field460;
    int _field461;
    int _field462;
    unsigned int _field463;
    unsigned int _field464;
    unsigned int _field465;
    char _field466[256];
    unsigned int _field467;
    unsigned int _field468;
    unsigned int _field469;
    unsigned int _field470;
    unsigned int _field471;
    unsigned int _field472;
    unsigned int _field473;
    unsigned int _field474;
    unsigned int _field475;
    unsigned int _field476;
    unsigned int _field477;
    unsigned int _field478;
    unsigned int _field479;
    unsigned short _field480;
    unsigned int _field481;
    unsigned int _field482;
    unsigned int _field483;
    unsigned int _field484;
    unsigned int _field485;
    unsigned int _field486;
    struct tagVCodec2HWEngineReport _field487;
    unsigned int _field488;
    unsigned int _field489;
    unsigned int _field490;
    unsigned int _field491;
    unsigned int _field492;
    unsigned int _field493;
    unsigned int _field494;
    unsigned int _field495;
    unsigned int _field496;
    unsigned int _field497;
    unsigned int _field498;
    unsigned int _field499;
    unsigned int _field500;
    unsigned int _field501;
    unsigned int _field502;
    unsigned int _field503;
    unsigned int _field504;
    unsigned int _field505;
    unsigned int _field506;
    unsigned int _field507;
    unsigned int _field508;
    unsigned int _field509;
    unsigned int _field510;
    unsigned int _field511;
    unsigned int _field512;
    unsigned int _field513;
    unsigned int _field514;
    unsigned int _field515;
    unsigned int _field516;
    unsigned int _field517;
    unsigned int _field518;
    unsigned int _field519;
    unsigned int _field520;
    unsigned int _field521;
    unsigned int _field522;
    unsigned int _field523;
    unsigned int _field524;
    unsigned int _field525;
    unsigned int _field526;
    unsigned int _field527;
    unsigned int _field528;
    unsigned int _field529;
    unsigned int _field530;
    unsigned int _field531;
    unsigned int _field532;
    unsigned int _field533;
    unsigned int _field534;
    unsigned int _field535;
    unsigned int _field536;
    unsigned int _field537;
    unsigned int _field538;
    unsigned int _field539;
    unsigned int _field540;
    unsigned int _field541;
    unsigned int _field542;
    unsigned int _field543;
    unsigned int _field544;
    unsigned int _field545;
    unsigned int _field546;
    unsigned int _field547;
    unsigned int _field548;
    unsigned int _field549;
    unsigned int _field550;
    unsigned int _field551;
    unsigned int _field552;
    unsigned int _field553;
    unsigned int _field554;
    unsigned int _field555;
    unsigned int _field556;
    unsigned int _field557;
    unsigned int _field558;
    unsigned int _field559;
    unsigned int _field560;
    unsigned int _field561;
    unsigned int _field562;
    unsigned int _field563;
    unsigned int _field564;
    unsigned int _field565;
    unsigned int _field566;
    unsigned int _field567;
    unsigned int _field568;
    unsigned int _field569;
    unsigned int _field570;
    unsigned int _field571;
    unsigned int _field572;
    unsigned int _field573;
    unsigned int _field574;
    unsigned int _field575;
    unsigned int _field576;
    unsigned int _field577;
    unsigned int _field578;
    unsigned int _field579;
    unsigned int _field580;
    unsigned int _field581;
    unsigned int _field582;
    unsigned int _field583;
    unsigned int _field584;
    unsigned int _field585;
    unsigned int _field586;
    unsigned int _field587;
    unsigned int _field588;
    unsigned int _field589;
    unsigned int _field590;
    unsigned int _field591;
    unsigned int _field592;
    unsigned int _field593;
    unsigned int _field594;
    unsigned int _field595;
    unsigned short _field596;
    unsigned short _field597;
    unsigned short _field598;
    unsigned short _field599;
    unsigned short _field600;
    unsigned short _field601;
    unsigned short _field602;
    unsigned short _field603;
    unsigned short _field604;
    unsigned short _field605;
    unsigned short _field606;
    unsigned short _field607;
    unsigned short _field608;
    unsigned short _field609;
    unsigned short _field610;
    unsigned short _field611;
    unsigned int _field612;
    unsigned int _field613;
    unsigned int _field614;
    unsigned int _field615;
    unsigned int _field616;
    unsigned int _field617;
    unsigned int _field618;
    unsigned int _field619;
    unsigned int _field620;
    unsigned int _field621;
    unsigned int _field622;
    unsigned int _field623;
    unsigned int _field624;
    unsigned int _field625;
    unsigned int _field626;
    unsigned int _field627;
    unsigned int _field628;
    unsigned int _field629;
    unsigned int _field630;
    unsigned int _field631;
    unsigned int _field632;
    unsigned int _field633;
    unsigned int _field634;
    unsigned int _field635;
    unsigned int _field636;
    unsigned int _field637;
    unsigned int _field638;
    unsigned int _field639;
    unsigned int _field640;
    unsigned int _field641;
    unsigned int _field642;
    unsigned short _field643;
    unsigned short _field644;
    unsigned short _field645;
    unsigned short _field646;
    unsigned short _field647;
    unsigned short _field648;
    unsigned short _field649;
    unsigned short _field650;
    unsigned short _field651;
    unsigned short _field652;
    unsigned short _field653;
    unsigned int _field654;
    unsigned short _field655[256];
    unsigned short _field656[256];
    unsigned int _field657;
    unsigned int _field658;
    unsigned int _field659;
    unsigned int _field660;
    unsigned int _field661;
    unsigned int _field662;
    int _field663;
    int _field664;
    int _field665;
    int _field666;
    int _field667;
    int _field668;
    unsigned int _field669;
    unsigned int _field670;
    unsigned int _field671;
    unsigned int _field672;
    unsigned int _field673;
    unsigned int _field674;
    unsigned int _field675;
    unsigned int _field676;
    unsigned int _field677;
    unsigned int _field678;
    unsigned int _field679;
    unsigned int _field680;
    unsigned int _field681;
    unsigned int _field682;
    unsigned int _field683;
    unsigned int _field684;
    unsigned int _field685;
    unsigned int _field686;
    unsigned int _field687;
    unsigned int _field688;
    unsigned int _field689;
    unsigned int _field690;
    unsigned int _field691;
    unsigned int _field692;
    unsigned int _field693;
    unsigned int _field694;
    unsigned int _field695;
    unsigned int _field696;
    unsigned int _field697;
    unsigned int _field698;
    unsigned int _field699;
    unsigned int _field700;
    unsigned int _field701;
    unsigned int _field702;
    unsigned int _field703;
    unsigned int _field704;
    unsigned int _field705;
    unsigned int _field706;
    char _field707[256];
    unsigned int _field708;
    unsigned int _field709;
    unsigned int _field710;
    unsigned int _field711;
    unsigned int _field712;
    unsigned int _field713;
    unsigned int _field714;
    unsigned int _field715;
    unsigned int _field716;
    unsigned int _field717;
    unsigned int _field718;
    unsigned int _field719;
    unsigned int _field720;
    unsigned int _field721;
    unsigned int _field722;
    unsigned int _field723;
    unsigned int _field724;
    unsigned int _field725;
    unsigned int _field726;
    unsigned int _field727;
    unsigned int _field728;
    unsigned int _field729;
    unsigned int _field730;
    unsigned int _field731;
    unsigned int _field732;
    unsigned int _field733;
    unsigned int _field734;
    unsigned int _field735;
    unsigned int _field736;
    unsigned int _field737;
    unsigned int _field738;
    unsigned int _field739;
    unsigned int _field740;
    unsigned int _field741;
    unsigned int _field742;
    unsigned int _field743;
    unsigned int _field744;
    unsigned int _field745;
    unsigned int _field746;
    unsigned int _field747;
    unsigned int _field748;
    unsigned int _field749;
    unsigned int _field750;
    unsigned int _field751;
    unsigned int _field752;
    unsigned int _field753;
    unsigned int _field754;
    unsigned int _field755;
    unsigned int _field756;
    unsigned int _field757;
    unsigned int _field758;
    unsigned int _field759;
    unsigned int _field760;
    unsigned int _field761;
    unsigned int _field762;
    unsigned int _field763;
    unsigned int _field764;
    unsigned int _field765;
    unsigned int _field766;
    unsigned int _field767;
    unsigned int _field768;
    unsigned int _field769;
    unsigned int _field770;
    unsigned int _field771;
    unsigned int _field772;
    unsigned int _field773;
    unsigned int _field774;
    unsigned int _field775;
    unsigned int _field776;
    unsigned int _field777;
    unsigned int _field778;
    unsigned int _field779;
    unsigned int _field780;
    unsigned int _field781;
    unsigned int _field782;
    unsigned int _field783;
    unsigned int _field784;
    unsigned int _field785;
    unsigned int _field786;
    unsigned int _field787;
    unsigned int _field788;
    unsigned int _field789;
    unsigned int _field790;
    int _field791;
    unsigned int _field792;
    unsigned int _field793;
    unsigned int _field794;
    int _field795;
    int _field796;
    int _field797;
    int _field798;
    int _field799;
    unsigned int _field800;
    unsigned int _field801;
    unsigned int _field802;
    unsigned int _field803;
    unsigned int _field804;
    unsigned int _field805;
    unsigned int _field806;
    unsigned int _field807;
    unsigned int _field808;
    unsigned int _field809;
    unsigned int _field810;
    unsigned int _field811;
    unsigned int _field812;
    unsigned int _field813;
    unsigned int _field814;
    unsigned int _field815;
    unsigned int _field816;
    unsigned int _field817;
    unsigned int _field818;
    unsigned int _field819;
    unsigned int _field820;
    unsigned int _field821;
    unsigned int _field822;
    unsigned int _field823;
    unsigned int _field824;
    unsigned int _field825;
    unsigned int _field826;
    unsigned int _field827;
    unsigned int _field828;
    unsigned int _field829;
    unsigned int _field830;
    unsigned int _field831;
    unsigned int _field832;
    unsigned int _field833;
    int _field834;
    int _field835;
    int _field836;
    unsigned int _field837;
    unsigned int _field838;
    unsigned int _field839;
    unsigned int _field840;
    unsigned int _field841;
    unsigned int _field842;
    unsigned int _field843;
    unsigned int _field844;
    unsigned int _field845;
    unsigned int _field846;
    unsigned int _field847;
    int _field848;
    char _field849[256];
    char _field850[256];
    int _field851;
    int _field852;
};

struct tagMultiRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    unsigned int _field68;
    unsigned int _field69;
    unsigned int _field70;
    unsigned int _field71;
    unsigned int _field72;
    unsigned int _field73;
    unsigned int _field74;
    unsigned int _field75;
    unsigned int _field76;
    unsigned int _field77;
    unsigned int _field78;
    unsigned int _field79;
    unsigned int _field80;
    unsigned int _field81;
    unsigned int _field82;
    unsigned int _field83;
    unsigned int _field84;
    unsigned int _field85;
    unsigned int _field86;
    unsigned int _field87;
    unsigned int _field88;
    unsigned int _field89;
    unsigned int _field90;
    unsigned int _field91;
    unsigned int _field92;
    unsigned int _field93;
    unsigned int _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned int _field97;
    unsigned int _field98;
    struct tagVideoArqRecvReport _field99;
    unsigned int _field100;
    unsigned int _field101;
    unsigned int _field102;
};

struct tagMultiRecvSubscribeReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct tagMultiSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    unsigned int _field68;
    unsigned int _field69;
    unsigned int _field70;
    struct tagVideoArqSendReport _field71;
    unsigned int _field72;
    unsigned int _field73;
    unsigned int _field74;
};

struct tagScreenRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tagScreenSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct tagVCodec2EngineReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
};

struct tagVCodec2HWEngineReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
};

struct tagVHWEngineReport {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned char _field6;
    unsigned char _field7;
};

struct tagVideoArqRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct tagVideoArqSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct tagVoipCallInfo {
    NSString *callerName;
    NSString *calleeName;
    int roomType;
    int roomId;
    long long roomkey;
    long long timeStamp;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct type {
    unsigned char __lx[32];
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<int, const MMCGIItem *, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, const MMCGIItem *>>> {
    struct __hash_table<std::__hash_value_type<int, const MMCGIItem *>, std::__unordered_map_hasher<int, std::__hash_value_type<int, const MMCGIItem *>, std::hash<int>, std::equal_to<int>, true>, std::__unordered_map_equal<int, std::__hash_value_type<int, const MMCGIItem *>, std::equal_to<int>, std::hash<int>, true>, std::allocator<std::__hash_value_type<int, const MMCGIItem *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<int, const MMCGIItem *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, const MMCGIItem *>, std::hash<int>, std::equal_to<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, const MMCGIItem *>, std::equal_to<int>, std::hash<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, const WCDBBackupMediaStr2IDObject *, std::hash<long long>, std::equal_to<long long>, std::allocator<std::pair<const long long, const WCDBBackupMediaStr2IDObject *>>> {
    struct __hash_table<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::__unordered_map_hasher<long long, std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::hash<long long>, std::equal_to<long long>, true>, std::__unordered_map_equal<long long, std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::equal_to<long long>, std::hash<long long>, true>, std::allocator<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<long long, std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::hash<long long>, std::equal_to<long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<long long, std::__hash_value_type<long long, const WCDBBackupMediaStr2IDObject *>, std::equal_to<long long>, std::hash<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> {
    struct __hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::string>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, std::hash<std::string>, std::equal_to<std::string>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, std::equal_to<std::string>, std::hash<std::string>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, MMCGI *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, MMCGI *>>> {
    struct __hash_table<std::__hash_value_type<unsigned int, MMCGI *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MMCGI *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MMCGI *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, MMCGI *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, MMCGI *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, MMCGI *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, MMCGI *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, id, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, id>>> {
    struct __hash_table<std::__hash_value_type<unsigned int, id>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, id>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, id>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, id>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, id>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, id>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, id>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, std::set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::set<unsigned int>>>> {
    struct __hash_table<std::__hash_value_type<unsigned long, std::set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::set<unsigned int>>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::set<unsigned int>>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vector<QBAR_INFO, std::allocator<QBAR_INFO>> {
    struct QBAR_INFO *_field1;
    struct QBAR_INFO *_field2;
    struct __compressed_pair<QBAR_INFO *, std::allocator<QBAR_INFO>> {
        struct QBAR_INFO *_field1;
    } _field3;
};

struct vector<TPAVProgramInfo, std::allocator<TPAVProgramInfo>> {
    struct TPAVProgramInfo *_field1;
    struct TPAVProgramInfo *_field2;
    struct __compressed_pair<TPAVProgramInfo *, std::allocator<TPAVProgramInfo>> {
        struct TPAVProgramInfo *_field1;
    } _field3;
};

struct vector<TPDRM::DrmSchemeType, std::allocator<TPDRM::DrmSchemeType>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TPDRM::DrmSchemeType *, std::allocator<TPDRM::DrmSchemeType>> {
        int *_field1;
    } _field3;
};

struct vector<TPMediaTrackInfo, std::allocator<TPMediaTrackInfo>> {
    struct TPMediaTrackInfo *_field1;
    struct TPMediaTrackInfo *_field2;
    struct __compressed_pair<TPMediaTrackInfo *, std::allocator<TPMediaTrackInfo>> {
        struct TPMediaTrackInfo *_field1;
    } _field3;
};

struct vector<TPPlayerRichMediaFeature, std::allocator<TPPlayerRichMediaFeature>> {
    struct TPPlayerRichMediaFeature *_field1;
    struct TPPlayerRichMediaFeature *_field2;
    struct __compressed_pair<TPPlayerRichMediaFeature *, std::allocator<TPPlayerRichMediaFeature>> {
        struct TPPlayerRichMediaFeature *_field1;
    } _field3;
};

struct vector<int, std::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<mars::cdn::BatchSnsReqImageData, std::allocator<mars::cdn::BatchSnsReqImageData>> {
    struct BatchSnsReqImageData *__begin_;
    struct BatchSnsReqImageData *__end_;
    struct __compressed_pair<mars::cdn::BatchSnsReqImageData *, std::allocator<mars::cdn::BatchSnsReqImageData>> {
        struct BatchSnsReqImageData *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::CheckHitFileInfo, std::allocator<mars::cdn::CheckHitFileInfo>> {
    struct CheckHitFileInfo *_field1;
    struct CheckHitFileInfo *_field2;
    struct __compressed_pair<mars::cdn::CheckHitFileInfo *, std::allocator<mars::cdn::CheckHitFileInfo>> {
        struct CheckHitFileInfo *_field1;
    } _field3;
};

struct vector<mars::cdn::FileID, std::allocator<mars::cdn::FileID>> {
    struct FileID *_field1;
    struct FileID *_field2;
    struct __compressed_pair<mars::cdn::FileID *, std::allocator<mars::cdn::FileID>> {
        struct FileID *_field1;
    } _field3;
};

struct vector<mars::cdn::HostIpMap, std::allocator<mars::cdn::HostIpMap>> {
    struct HostIpMap *__begin_;
    struct HostIpMap *__end_;
    struct __compressed_pair<mars::cdn::HostIpMap *, std::allocator<mars::cdn::HostIpMap>> {
        struct HostIpMap *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::QuicForceHost, std::allocator<mars::cdn::QuicForceHost>> {
    struct QuicForceHost *__begin_;
    struct QuicForceHost *__end_;
    struct __compressed_pair<mars::cdn::QuicForceHost *, std::allocator<mars::cdn::QuicForceHost>> {
        struct QuicForceHost *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::QuicHostMap, std::allocator<mars::cdn::QuicHostMap>> {
    struct QuicHostMap *__begin_;
    struct QuicHostMap *__end_;
    struct __compressed_pair<mars::cdn::QuicHostMap *, std::allocator<mars::cdn::QuicHostMap>> {
        struct QuicHostMap *__value_;
    } __end_cap_;
};

struct vector<objc_method_description, std::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
};

struct vector<ocrlite::ParaOCRResult, std::allocator<ocrlite::ParaOCRResult>> {
    struct ParaOCRResult *_field1;
    struct ParaOCRResult *_field2;
    struct __compressed_pair<ocrlite::ParaOCRResult *, std::allocator<ocrlite::ParaOCRResult>> {
        struct ParaOCRResult *_field1;
    } _field3;
};

struct vector<std::string, std::allocator<std::string>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *_field1;
    } _field3;
};

struct vector<std::tuple<NSString *, NSString *, NSString *, NSString *>, std::allocator<std::tuple<NSString *, NSString *, NSString *, NSString *>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::tuple<NSString *, NSString *, NSString *, NSString *>*, std::allocator<std::tuple<NSString *, NSString *, NSString *, NSString *>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<std::vector<float>, std::allocator<std::vector<float>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::vector<float>*, std::allocator<std::vector<float>>> {
        void *_field1;
    } _field3;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    SEL _field1;
    SEL _field2;
    SEL _field3;
} CDStruct_0348af7d;

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_33dcf794;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
} CDStruct_259f0c51;

typedef struct CDStruct_183601bc;

typedef struct {
    struct ComponentInstanceRecord *ioUnit;
    struct AudioStreamBasicDescription inputDataFormat;
    struct AudioStreamBasicDescription outputDataFormat;
    id recordDS;
    id playDS;
    unsigned int volumeFactor;
    _Bool isRunning;
} CDStruct_a00e0650;

typedef struct {
    CDStruct_14f26992 _field1;
    CDStruct_14f26992 _field2;
} CDStruct_4c83c94d;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
} CDStruct_d2aef016;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
} CDStruct_499be82c;

typedef struct {
    long long _field1;
    struct CGRect _field2;
    long long _field3;
} CDStruct_4b25f01b;

typedef struct {
    int _field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    basic_string_8e19b51d _field5;
    float _field6;
    float _field7;
    unsigned int _field8;
    unsigned int _field9;
    float _field10;
    unsigned int _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
} CDStruct_4ebc2506;

// Template types
typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_8e19b51d;

typedef struct deque<TPAudioRouteDescription, std::allocator<TPAudioRouteDescription>> {
    struct __split_buffer<TPAudioRouteDescription *, std::allocator<TPAudioRouteDescription *>> {
        struct TPAudioRouteDescription **__first_;
        struct TPAudioRouteDescription **__begin_;
        struct TPAudioRouteDescription **__end_;
        struct __compressed_pair<TPAudioRouteDescription **, std::allocator<TPAudioRouteDescription *>> {
            struct TPAudioRouteDescription **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<TPAudioRouteDescription>> {
        unsigned long long __value_;
    } __size_;
} deque_19df0b0c;

typedef struct function<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
    struct __value_func<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
        struct type _field1;
        void *_field2;
    } _field1;
} function_ffa07b7f;

typedef struct function<void (NSString *, NSDictionary *)> {
    struct __value_func<void (NSString *, NSDictionary *)> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_db428f58;

typedef struct function<void (const char *, std::vector<sqlitelint::Issue>)> {
    struct __value_func<void (const char *, std::vector<sqlitelint::Issue>)> {
        struct type _field1;
        void *_field2;
    } _field1;
} function_7f4503e1;

typedef struct list<std::string, std::allocator<std::string>> {
    struct __list_node_base<std::string, void *> {
        void *_field1;
        void *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::string, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_823ce23d;

typedef struct map<TPCodecID, TPVCodecMaxCapability, std::less<TPCodecID>, std::allocator<std::pair<const TPCodecID, TPVCodecMaxCapability>>> {
    struct __tree<std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>, std::allocator<std::__value_type<TPCodecID, TPVCodecMaxCapability>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPCodecID, TPVCodecMaxCapability>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_64ffd165;

typedef struct map<int, std::string, std::less<int>, std::allocator<std::pair<const int, std::string>>> {
    struct __tree<std::__value_type<int, std::string>, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>, std::allocator<std::__value_type<int, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<int, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_3f958a91;

typedef struct shared_ptr<CdnCallback> {
    struct CdnCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_67bd78cc;

typedef struct vector<QBAR_INFO, std::allocator<QBAR_INFO>> {
    struct QBAR_INFO *_field1;
    struct QBAR_INFO *_field2;
    struct __compressed_pair<QBAR_INFO *, std::allocator<QBAR_INFO>> {
        struct QBAR_INFO *_field1;
    } _field3;
} vector_95637d69;

typedef struct vector<TPAVProgramInfo, std::allocator<TPAVProgramInfo>> {
    struct TPAVProgramInfo *_field1;
    struct TPAVProgramInfo *_field2;
    struct __compressed_pair<TPAVProgramInfo *, std::allocator<TPAVProgramInfo>> {
        struct TPAVProgramInfo *_field1;
    } _field3;
} vector_5a53d670;

typedef struct vector<TPDRM::DrmSchemeType, std::allocator<TPDRM::DrmSchemeType>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TPDRM::DrmSchemeType *, std::allocator<TPDRM::DrmSchemeType>> {
        int *_field1;
    } _field3;
} vector_7f91b74d;

typedef struct vector<TPMediaTrackInfo, std::allocator<TPMediaTrackInfo>> {
    struct TPMediaTrackInfo *_field1;
    struct TPMediaTrackInfo *_field2;
    struct __compressed_pair<TPMediaTrackInfo *, std::allocator<TPMediaTrackInfo>> {
        struct TPMediaTrackInfo *_field1;
    } _field3;
} vector_fdf80d0c;

typedef struct vector<TPPlayerRichMediaFeature, std::allocator<TPPlayerRichMediaFeature>> {
    struct TPPlayerRichMediaFeature *_field1;
    struct TPPlayerRichMediaFeature *_field2;
    struct __compressed_pair<TPPlayerRichMediaFeature *, std::allocator<TPPlayerRichMediaFeature>> {
        struct TPPlayerRichMediaFeature *_field1;
    } _field3;
} vector_f4e3e6bf;

typedef struct vector<int, std::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::allocator<int>> {
        int *_field1;
    } _field3;
} vector_1d76f7fb;

typedef struct vector<objc_method_description, std::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
} vector_c11dd721;

typedef struct vector<ocrlite::ParaOCRResult, std::allocator<ocrlite::ParaOCRResult>> {
    struct ParaOCRResult *_field1;
    struct ParaOCRResult *_field2;
    struct __compressed_pair<ocrlite::ParaOCRResult *, std::allocator<ocrlite::ParaOCRResult>> {
        struct ParaOCRResult *_field1;
    } _field3;
} vector_f08cc19b;

typedef struct vector<std::string, std::allocator<std::string>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *_field1;
    } _field3;
} vector_74824a0a;

typedef struct vector<std::vector<float>, std::allocator<std::vector<float>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::vector<float>*, std::allocator<std::vector<float>>> {
        void *_field1;
    } _field3;
} vector_9a474c4d;

#pragma mark Named Unions

union sigval {
    int _field1;
    void *_field2;
};

